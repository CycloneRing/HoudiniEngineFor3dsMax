/*
 * Copyright (c) <2022> Side Effects Software Inc. *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 *
 * COMMENTS:
 *      This file is generated. Do not modify directly.
 */

#pragma once
#include "HAPI.h"
#include "HEMAX_Platform.h"


struct HEMAX_HoudiniApi
{
public:

    static void InitializeHAPI(void* LibraryHandle);
    static void FinalizeHAPI();
    static bool IsHAPIInitialized();
    static bool HandleHAPIResult(const HAPI_Session* session, HAPI_Result Result);

public:

    typedef HAPI_Result (*AddAttributeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info);
    typedef HAPI_Result (*AddGroupFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name);
    typedef HAPI_Result (*BindCustomImplementationFuncPtr)(HAPI_SessionType session_type, const char * dll_path);
    typedef HAPI_Result (*CancelPDGCookFuncPtr)(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id);
    typedef HAPI_Result (*CheckForSpecificErrorsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ErrorCodeBits errors_to_look_for, HAPI_ErrorCodeBits * errors_found);
    typedef HAPI_Result (*CleanupFuncPtr)(const HAPI_Session * session);
    typedef HAPI_Result (*ClearConnectionErrorFuncPtr)();
    typedef HAPI_Result (*CloseSessionFuncPtr)(const HAPI_Session * session);
    typedef HAPI_Result (*CommitGeoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id);
    typedef HAPI_Result (*CommitWorkItemsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id);
    typedef HAPI_Result (*CommitWorkitemsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id);
    typedef HAPI_Result (*ComposeChildNodeListFuncPtr)(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_NodeTypeBits node_type_filter, HAPI_NodeFlagsBits node_flags_filter, HAPI_Bool recursive, int * count);
    typedef HAPI_Result (*ComposeNodeCookResultFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_StatusVerbosity verbosity, int * buffer_length);
    typedef HAPI_Result (*ComposeObjectListFuncPtr)(const HAPI_Session * session, HAPI_NodeId parent_node_id, const char * categories, int * object_count);
    typedef HAPI_Result (*ConnectNodeInputFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int input_index, HAPI_NodeId node_id_to_connect, int output_index);
    typedef HAPI_Result (*ConvertMatrixToEulerFuncPtr)(const HAPI_Session * session, const float * matrix, HAPI_RSTOrder rst_order, HAPI_XYZOrder rot_order, HAPI_TransformEuler * transform_out);
    typedef HAPI_Result (*ConvertMatrixToQuatFuncPtr)(const HAPI_Session * session, const float * matrix, HAPI_RSTOrder rst_order, HAPI_Transform * transform_out);
    typedef HAPI_Result (*ConvertTransformFuncPtr)(const HAPI_Session * session, const HAPI_TransformEuler * transform_in, HAPI_RSTOrder rst_order, HAPI_XYZOrder rot_order, HAPI_TransformEuler * transform_out);
    typedef HAPI_Result (*ConvertTransformEulerToMatrixFuncPtr)(const HAPI_Session * session, const HAPI_TransformEuler * transform, float * matrix);
    typedef HAPI_Result (*ConvertTransformQuatToMatrixFuncPtr)(const HAPI_Session * session, const HAPI_Transform * transform, float * matrix);
    typedef HAPI_Result (*CookNodeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const HAPI_CookOptions * cook_options);
    typedef HAPI_Result (*CookPDGFuncPtr)(const HAPI_Session * session, HAPI_NodeId cook_node_id, int generate_only, int blocking);
    typedef HAPI_Result (*CookPDGAllOutputsFuncPtr)(const HAPI_Session* session, HAPI_NodeId cook_node_id, int generate_only, int blocking);
    typedef HAPI_Result (*CreateCustomSessionFuncPtr)(HAPI_SessionType session_type, void * session_info, HAPI_Session * session);
    typedef HAPI_Result (*CreateHeightFieldInputFuncPtr)(const HAPI_Session * session, HAPI_NodeId parent_node_id, const char * name, int xsize, int ysize, float voxelsize, HAPI_HeightFieldSampling sampling, HAPI_NodeId * heightfield_node_id, HAPI_NodeId * height_node_id, HAPI_NodeId * mask_node_id, HAPI_NodeId * merge_node_id);
    typedef HAPI_Result (*CreateHeightfieldInputVolumeNodeFuncPtr)(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_NodeId * new_node_id, const char * name, int xsize, int ysize, float voxelsize);
    typedef HAPI_Result (*CreateInProcessSessionFuncPtr)(HAPI_Session * session);
    typedef HAPI_Result (*CreateInputCurveNodeFuncPtr)(const HAPI_Session * session, HAPI_NodeId * node_id, const char * name);
    typedef HAPI_Result (*CreateInputNodeFuncPtr)(const HAPI_Session * session, HAPI_NodeId * node_id, const char * name);
    typedef HAPI_Result (*CreateNodeFuncPtr)(const HAPI_Session * session, HAPI_NodeId parent_node_id, const char * operator_name, const char * node_label, HAPI_Bool cook_on_creation, HAPI_NodeId * new_node_id);
    typedef HAPI_Result (*CreateThriftNamedPipeSessionFuncPtr)(HAPI_Session * session, const char * pipe_name);
    typedef HAPI_Result (*CreateThriftSocketSessionFuncPtr)(HAPI_Session * session, const char * host_name, int port);
    typedef HAPI_Result (*CreateWorkItemFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId * work_item_id, const char * name, int index);
    typedef HAPI_Result (*CreateWorkitemFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId * workitem_id, const char * name, int index);
    typedef HAPI_Result (*DeleteAttributeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info);
    typedef HAPI_Result (*DeleteGroupFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name);
    typedef HAPI_Result (*DeleteNodeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id);
    typedef HAPI_Result (*DirtyPDGNodeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Bool clean_results);
    typedef HAPI_Result (*DisconnectNodeInputFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int input_index);
    typedef HAPI_Result (*DisconnectNodeOutputsAtFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int output_index);
    typedef HAPI_Result (*ExtractImageToFileFuncPtr)(const HAPI_Session * session, HAPI_NodeId material_node_id, const char * image_file_format_name, const char * image_planes, const char * destination_folder_path, const char * destination_file_name, int * destination_file_path);
    typedef HAPI_Result (*ExtractImageToMemoryFuncPtr)(const HAPI_Session * session, HAPI_NodeId material_node_id, const char * image_file_format_name, const char * image_planes, int * buffer_size);
    typedef HAPI_Result (*GetActiveCacheCountFuncPtr)(const HAPI_Session * session, int * active_cache_count);
    typedef HAPI_Result (*GetActiveCacheNamesFuncPtr)(const HAPI_Session * session, HAPI_StringHandle * cache_names_array, int active_cache_count);
    typedef HAPI_Result (*GetAssetDefinitionParmCountsFuncPtr)(const HAPI_Session * session, HAPI_AssetLibraryId library_id, const char * asset_name, int * parm_count, int * int_value_count, int * float_value_count, int * string_value_count, int * choice_value_count);
    typedef HAPI_Result (*GetAssetDefinitionParmInfosFuncPtr)(const HAPI_Session * session, HAPI_AssetLibraryId library_id, const char * asset_name, HAPI_ParmInfo * parm_infos_array, int start, int length);
    typedef HAPI_Result (*GetAssetDefinitionParmValuesFuncPtr)(const HAPI_Session * session, HAPI_AssetLibraryId library_id, const char * asset_name, int * int_values_array, int int_start, int int_length, float * float_values_array, int float_start, int float_length, HAPI_Bool string_evaluate, HAPI_StringHandle * string_values_array, int string_start, int string_length, HAPI_ParmChoiceInfo * choice_values_array, int choice_start, int choice_length);
    typedef HAPI_Result (*GetAssetInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_AssetInfo * asset_info);
    typedef HAPI_Result (*GetAttributeFloat64ArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, double * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*GetAttributeFloat64DataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, double * data_array, int start, int length);
    typedef HAPI_Result (*GetAttributeFloatArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, float * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*GetAttributeFloatDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, float * data_array, int start, int length);
    typedef HAPI_Result (*GetAttributeInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeOwner owner, HAPI_AttributeInfo * attr_info);
    typedef HAPI_Result (*GetAttributeInt16ArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_Int16 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*GetAttributeInt16DataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_Int16 * data_array, int start, int length);
    typedef HAPI_Result (*GetAttributeInt64ArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_Int64 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*GetAttributeInt64DataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_Int64 * data_array, int start, int length);
    typedef HAPI_Result (*GetAttributeInt8ArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_Int8 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*GetAttributeInt8DataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_Int8 * data_array, int start, int length);
    typedef HAPI_Result (*GetAttributeIntArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*GetAttributeIntDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, int * data_array, int start, int length);
    typedef HAPI_Result (*GetAttributeNamesFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_AttributeOwner owner, HAPI_StringHandle * attribute_names_array, int count);
    typedef HAPI_Result (*GetAttributeStringArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_StringHandle * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*GetAttributeStringDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_StringHandle * data_array, int start, int length);
    typedef HAPI_Result (*GetAttributeUInt8ArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_UInt8 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*GetAttributeUInt8DataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_UInt8 * data_array, int start, int length);
    typedef HAPI_Result (*GetAvailableAssetCountFuncPtr)(const HAPI_Session * session, HAPI_AssetLibraryId library_id, int * asset_count);
    typedef HAPI_Result (*GetAvailableAssetsFuncPtr)(const HAPI_Session * session, HAPI_AssetLibraryId library_id, HAPI_StringHandle * asset_names_array, int asset_count);
    typedef HAPI_Result (*GetBoxInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId geo_node_id, HAPI_PartId part_id, HAPI_BoxInfo * box_info);
    typedef HAPI_Result (*GetCachePropertyFuncPtr)(const HAPI_Session * session, const char * cache_name, HAPI_CacheProperty cache_property, int * property_value);
    typedef HAPI_Result (*GetComposedChildNodeListFuncPtr)(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_NodeId * child_node_ids_array, int count);
    typedef HAPI_Result (*GetComposedNodeCookResultFuncPtr)(const HAPI_Session * session, char * string_value, int length);
    typedef HAPI_Result (*GetComposedObjectListFuncPtr)(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_ObjectInfo * object_infos_array, int start, int length);
    typedef HAPI_Result (*GetComposedObjectTransformsFuncPtr)(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_RSTOrder rst_order, HAPI_Transform * transform_array, int start, int length);
    typedef HAPI_Result (*GetCompositorOptionsFuncPtr)(const HAPI_Session * session, HAPI_CompositorOptions * compositor_options);
    typedef HAPI_Result (*GetConnectionErrorFuncPtr)(char * string_value, int length, HAPI_Bool clear);
    typedef HAPI_Result (*GetConnectionErrorLengthFuncPtr)(int * buffer_length);
    typedef HAPI_Result (*GetCookingCurrentCountFuncPtr)(const HAPI_Session * session, int * count);
    typedef HAPI_Result (*GetCookingTotalCountFuncPtr)(const HAPI_Session * session, int * count);
    typedef HAPI_Result (*GetCurveCountsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * counts_array, int start, int length);
    typedef HAPI_Result (*GetCurveInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_CurveInfo * info);
    typedef HAPI_Result (*GetCurveKnotsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float * knots_array, int start, int length);
    typedef HAPI_Result (*GetCurveOrdersFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * orders_array, int start, int length);
    typedef HAPI_Result (*GetDisplayGeoInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId object_node_id, HAPI_GeoInfo * geo_info);
    typedef HAPI_Result (*GetEdgeCountOfEdgeGroupFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * group_name, int * edge_count);
    typedef HAPI_Result (*GetEnvIntFuncPtr)(HAPI_EnvIntType int_type, int * value);
    typedef HAPI_Result (*GetFaceCountsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * face_counts_array, int start, int length);
    typedef HAPI_Result (*GetFirstVolumeTileFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeTileInfo * tile);
    typedef HAPI_Result (*GetGeometryInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_GeoInfo * geo_info);
    typedef HAPI_Result (*GetGeoSizeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * format, int * size);
    typedef HAPI_Result (*GetGroupCountOnPackedInstancePartFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * pointGroupCount, int * primitiveGroupCount);
    typedef HAPI_Result (*GetGroupMembershipFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, HAPI_Bool * membership_array_all_equal, int * membership_array, int start, int length);
    typedef HAPI_Result (*GetGroupMembershipOnPackedInstancePartFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, HAPI_Bool * membership_array_all_equal, int * membership_array, int start, int length);
    typedef HAPI_Result (*GetGroupNamesFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_GroupType group_type, HAPI_StringHandle * group_names_array, int group_count);
    typedef HAPI_Result (*GetGroupNamesOnPackedInstancePartFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, HAPI_StringHandle * group_names_array, int group_count);
    typedef HAPI_Result (*GetHIPFileNodeCountFuncPtr)(const HAPI_Session * session, HAPI_HIPFileId id, int * count);
    typedef HAPI_Result (*GetHIPFileNodeIdsFuncPtr)(const HAPI_Session * session, HAPI_HIPFileId id, HAPI_NodeId * node_ids, int length);
    typedef HAPI_Result (*GetHandleBindingInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int handle_index, HAPI_HandleBindingInfo * handle_binding_infos_array, int start, int length);
    typedef HAPI_Result (*GetHandleInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_HandleInfo * handle_infos_array, int start, int length);
    typedef HAPI_Result (*GetHeightFieldDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float * values_array, int start, int length);
    typedef HAPI_Result (*GetImageFilePathFuncPtr)(const HAPI_Session * session, HAPI_NodeId material_node_id, const char * image_file_format_name, const char * image_planes, const char * destination_folder_path, const char * destination_file_name, HAPI_ParmId texture_parm_id, int * destination_file_path);
    typedef HAPI_Result (*GetImageInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_ImageInfo * image_info);
    typedef HAPI_Result (*GetImageMemoryBufferFuncPtr)(const HAPI_Session * session, HAPI_NodeId material_node_id, char * buffer, int length);
    typedef HAPI_Result (*GetImagePlaneCountFuncPtr)(const HAPI_Session * session, HAPI_NodeId material_node_id, int * image_plane_count);
    typedef HAPI_Result (*GetImagePlanesFuncPtr)(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_StringHandle * image_planes_array, int image_plane_count);
    typedef HAPI_Result (*GetInputCurveInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_InputCurveInfo * info);
    typedef HAPI_Result (*GetInstanceTransformsOnPartFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_RSTOrder rst_order, HAPI_Transform * transforms_array, int start, int length);
    typedef HAPI_Result (*GetInstancedObjectIdsFuncPtr)(const HAPI_Session * session, HAPI_NodeId object_node_id, HAPI_NodeId * instanced_node_id_array, int start, int length);
    typedef HAPI_Result (*GetInstancedPartIdsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_PartId * instanced_parts_array, int start, int length);
    typedef HAPI_Result (*GetInstancerPartTransformsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_RSTOrder rst_order, HAPI_Transform * transforms_array, int start, int length);
    typedef HAPI_Result (*GetManagerNodeIdFuncPtr)(const HAPI_Session * session, HAPI_NodeType node_type, HAPI_NodeId * node_id);
    typedef HAPI_Result (*GetMaterialInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_MaterialInfo * material_info);
    typedef HAPI_Result (*GetMaterialNodeIdsOnFacesFuncPtr)(const HAPI_Session * session, HAPI_NodeId geometry_node_id, HAPI_PartId part_id, HAPI_Bool * are_all_the_same, HAPI_NodeId * material_ids_array, int start, int length);
    typedef HAPI_Result (*GetNextVolumeTileFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeTileInfo * tile);
    typedef HAPI_Result (*GetNodeFromPathFuncPtr)(const HAPI_Session * session, const HAPI_NodeId parent_node_id, const char * path, HAPI_NodeId * node_id);
    typedef HAPI_Result (*GetNodeInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeInfo * node_info);
    typedef HAPI_Result (*GetNodeInputNameFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int input_idx, HAPI_StringHandle * name);
    typedef HAPI_Result (*GetNodeOutputNameFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int output_idx, HAPI_StringHandle * name);
    typedef HAPI_Result (*GetNodePathFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeId relative_to_node_id, HAPI_StringHandle * path);
    typedef HAPI_Result (*GetNumWorkItemsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int * num);
    typedef HAPI_Result (*GetNumWorkitemsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int * num);
    typedef HAPI_Result (*GetObjectInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ObjectInfo * object_info);
    typedef HAPI_Result (*GetObjectTransformFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeId relative_to_node_id, HAPI_RSTOrder rst_order, HAPI_Transform * transform);
    typedef HAPI_Result (*GetOutputGeoCountFuncPtr)(const HAPI_Session* session, HAPI_NodeId node_id, int* count);
    typedef HAPI_Result (*GetOutputGeoInfosFuncPtr)(const HAPI_Session* session, HAPI_NodeId node_id, HAPI_GeoInfo* geo_infos_array, int count);
    typedef HAPI_Result (*GetOutputNodeIdFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int output, HAPI_NodeId * output_node_id);
    typedef HAPI_Result (*GetPDGEventsFuncPtr)(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_EventInfo * event_array, int length, int * event_count, int * remaining_events);
    typedef HAPI_Result (*GetPDGGraphContextIdFuncPtr)(const HAPI_Session * session, HAPI_NodeId top_node_id, HAPI_PDG_GraphContextId * context_id);
    typedef HAPI_Result (*GetPDGGraphContextsFuncPtr)(const HAPI_Session * session, HAPI_StringHandle * context_names_array, HAPI_PDG_GraphContextId * context_id_array, int start, int length);
    typedef HAPI_Result (*GetPDGGraphContextsCountFuncPtr)(const HAPI_Session* session, int* num_contexts);
    typedef HAPI_Result (*GetPDGStateFuncPtr)(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, int * pdg_state);
    typedef HAPI_Result (*GetParametersFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmInfo * parm_infos_array, int start, int length);
    typedef HAPI_Result (*GetParmChoiceListsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmChoiceInfo * parm_choices_array, int start, int length);
    typedef HAPI_Result (*GetParmExpressionFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_StringHandle * value);
    typedef HAPI_Result (*GetParmFileFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, const char * destination_directory, const char * destination_file_name);
    typedef HAPI_Result (*GetParmFloatValueFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, float * value);
    typedef HAPI_Result (*GetParmFloatValuesFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, float * values_array, int start, int length);
    typedef HAPI_Result (*GetParmIdFromNameFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_ParmId * parm_id);
    typedef HAPI_Result (*GetParmInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, HAPI_ParmInfo * parm_info);
    typedef HAPI_Result (*GetParmInfoFromNameFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_ParmInfo * parm_info);
    typedef HAPI_Result (*GetParmIntValueFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, int * value);
    typedef HAPI_Result (*GetParmIntValuesFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int * values_array, int start, int length);
    typedef HAPI_Result (*GetParmNodeValueFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_NodeId * value);
    typedef HAPI_Result (*GetParmStringValueFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_Bool evaluate, HAPI_StringHandle * value);
    typedef HAPI_Result (*GetParmStringValuesFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Bool evaluate, HAPI_StringHandle * values_array, int start, int length);
    typedef HAPI_Result (*GetParmTagNameFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int tag_index, HAPI_StringHandle * tag_name);
    typedef HAPI_Result (*GetParmTagValueFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, const char * tag_name, HAPI_StringHandle * tag_value);
    typedef HAPI_Result (*GetParmWithTagFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * tag_name, HAPI_ParmId * parm_id);
    typedef HAPI_Result (*GetPartInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_PartInfo * part_info);
    typedef HAPI_Result (*GetPresetFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, char * buffer, int buffer_length);
    typedef HAPI_Result (*GetPresetBufLengthFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PresetType preset_type, const char * preset_name, int * buffer_length);
    typedef HAPI_Result (*GetServerEnvIntFuncPtr)(const HAPI_Session * session, const char * variable_name, int * value);
    typedef HAPI_Result (*GetServerEnvStringFuncPtr)(const HAPI_Session * session, const char * variable_name, HAPI_StringHandle * value);
    typedef HAPI_Result (*GetServerEnvVarCountFuncPtr)(const HAPI_Session * session, int * env_count);
    typedef HAPI_Result (*GetServerEnvVarListFuncPtr)(const HAPI_Session * session, HAPI_StringHandle * values_array, int start, int length);
    typedef HAPI_Result (*GetSessionEnvIntFuncPtr)(const HAPI_Session * session, HAPI_SessionEnvIntType int_type, int * value);
    typedef HAPI_Result (*GetSessionSyncInfoFuncPtr)(const HAPI_Session * session, HAPI_SessionSyncInfo * session_sync_info);
    typedef HAPI_Result (*GetSphereInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId geo_node_id, HAPI_PartId part_id, HAPI_SphereInfo * sphere_info);
    typedef HAPI_Result (*GetStatusFuncPtr)(const HAPI_Session * session, HAPI_StatusType status_type, int * status);
    typedef HAPI_Result (*GetStatusStringFuncPtr)(const HAPI_Session * session, HAPI_StatusType status_type, char * string_value, int length);
    typedef HAPI_Result (*GetStatusStringBufLengthFuncPtr)(const HAPI_Session * session, HAPI_StatusType status_type, HAPI_StatusVerbosity verbosity, int * buffer_length);
    typedef HAPI_Result (*GetStringFuncPtr)(const HAPI_Session * session, HAPI_StringHandle string_handle, char * string_value, int length);
    typedef HAPI_Result (*GetStringBatchFuncPtr)(const HAPI_Session * session, char * char_buffer, int char_array_length);
    typedef HAPI_Result (*GetStringBatchSizeFuncPtr)(const HAPI_Session * session, const int * string_handle_array, int string_handle_count, int * string_buffer_size);
    typedef HAPI_Result (*GetStringBufLengthFuncPtr)(const HAPI_Session * session, HAPI_StringHandle string_handle, int * buffer_length);
    typedef HAPI_Result (*GetSupportedImageFileFormatCountFuncPtr)(const HAPI_Session * session, int * file_format_count);
    typedef HAPI_Result (*GetSupportedImageFileFormatsFuncPtr)(const HAPI_Session * session, HAPI_ImageFileFormat * formats_array, int file_format_count);
    typedef HAPI_Result (*GetTimeFuncPtr)(const HAPI_Session * session, float * time);
    typedef HAPI_Result (*GetTimelineOptionsFuncPtr)(const HAPI_Session * session, HAPI_TimelineOptions * timeline_options);
    typedef HAPI_Result (*GetTotalCookCountFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeTypeBits node_type_filter, HAPI_NodeFlagsBits node_flags_filter, HAPI_Bool recursive, int * count);
    typedef HAPI_Result (*GetUseHoudiniTimeFuncPtr)(const HAPI_Session * session, HAPI_Bool * enabled);
    typedef HAPI_Result (*GetVertexListFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * vertex_list_array, int start, int length);
    typedef HAPI_Result (*GetViewportFuncPtr)(const HAPI_Session * session, HAPI_Viewport * viewport);
    typedef HAPI_Result (*GetVolumeBoundsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float * x_min, float * y_min, float * z_min, float * x_max, float * y_max, float * z_max, float * x_center, float * y_center, float * z_center);
    typedef HAPI_Result (*GetVolumeInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeInfo * volume_info);
    typedef HAPI_Result (*GetVolumeTileFloatDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float fill_value, const HAPI_VolumeTileInfo * tile, float * values_array, int length);
    typedef HAPI_Result (*GetVolumeTileIntDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int fill_value, const HAPI_VolumeTileInfo * tile, int * values_array, int length);
    typedef HAPI_Result (*GetVolumeVisualInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeVisualInfo * visual_info);
    typedef HAPI_Result (*GetVolumeVoxelFloatDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, float * values_array, int value_count);
    typedef HAPI_Result (*GetVolumeVoxelIntDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, int * values_array, int value_count);
    typedef HAPI_Result (*GetWorkItemAttributeSizeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, int * length);
    typedef HAPI_Result (*GetWorkItemFloatAttributeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, float * data_array, int length);
    typedef HAPI_Result (*GetWorkItemInfoFuncPtr)(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_WorkItemId work_item_id, HAPI_PDG_WorkItemInfo * work_item_info);
    typedef HAPI_Result (*GetWorkItemIntAttributeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, int * data_array, int length);
    typedef HAPI_Result (*GetWorkItemOutputFilesFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, HAPI_PDG_WorkItemOutputFile * resultinfo_array, int resultinfo_count);
    typedef HAPI_Result (*GetWorkItemStringAttributeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, HAPI_StringHandle * data_array, int length);
    typedef HAPI_Result (*GetWorkItemsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int * work_item_ids_array, int length);
    typedef HAPI_Result (*GetWorkitemDataLengthFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, int * length);
    typedef HAPI_Result (*GetWorkitemFloatDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, float * data_array, int length);
    typedef HAPI_Result (*GetWorkitemInfoFuncPtr)(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_WorkItemId workitem_id, HAPI_PDG_WorkItemInfo * workitem_info);
    typedef HAPI_Result (*GetWorkitemIntDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, int * data_array, int length);
    typedef HAPI_Result (*GetWorkitemResultInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, HAPI_PDG_WorkItemOutputFile * resultinfo_array, int resultinfo_count);
    typedef HAPI_Result (*GetWorkitemStringDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, HAPI_StringHandle * data_array, int length);
    typedef HAPI_Result (*GetWorkitemsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int * workitem_ids_array, int length);
    typedef HAPI_Result (*InitializeFuncPtr)(const HAPI_Session * session, const HAPI_CookOptions * cook_options, HAPI_Bool use_cooking_thread, int cooking_thread_stack_size, const char * houdini_environment_files, const char * otl_search_path, const char * dso_search_path, const char * image_dso_search_path, const char * audio_dso_search_path);
    typedef HAPI_Result (*InsertMultiparmInstanceFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int instance_position);
    typedef HAPI_Result (*InterruptFuncPtr)(const HAPI_Session * session);
    typedef HAPI_Result (*IsInitializedFuncPtr)(const HAPI_Session * session);
    typedef HAPI_Result (*IsNodeValidFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int unique_node_id, HAPI_Bool * answer);
    typedef HAPI_Result (*IsSessionValidFuncPtr)(const HAPI_Session * session);
    typedef HAPI_Result (*LoadAssetLibraryFromFileFuncPtr)(const HAPI_Session * session, const char * file_path, HAPI_Bool allow_overwrite, HAPI_AssetLibraryId * library_id);
    typedef HAPI_Result (*LoadAssetLibraryFromMemoryFuncPtr)(const HAPI_Session * session, const char * library_buffer, int library_buffer_length, HAPI_Bool allow_overwrite, HAPI_AssetLibraryId * library_id);
    typedef HAPI_Result (*LoadGeoFromFileFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * file_name);
    typedef HAPI_Result (*LoadGeoFromMemoryFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * format, const char * buffer, int length);
    typedef HAPI_Result (*LoadHIPFileFuncPtr)(const HAPI_Session * session, const char * file_name, HAPI_Bool cook_on_load);
    typedef HAPI_Result (*LoadNodeFromFileFuncPtr)(const HAPI_Session * session, const char * file_name, HAPI_NodeId parent_node_id, const char * node_label, HAPI_Bool cook_on_load, HAPI_NodeId * new_node_id);
    typedef HAPI_Result (*MergeHIPFileFuncPtr)(const HAPI_Session * session, const char * file_name, HAPI_Bool cook_on_load, HAPI_HIPFileId * file_id);
    typedef HAPI_Result (*ParmHasExpressionFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_Bool * has_expression);
    typedef HAPI_Result (*ParmHasTagFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, const char * tag_name, HAPI_Bool * has_tag);
    typedef HAPI_Result (*PausePDGCookFuncPtr)(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id);
    typedef HAPI_Result (*PythonThreadInterpreterLockFuncPtr)(const HAPI_Session * session, HAPI_Bool locked);
    typedef HAPI_Result (*QueryNodeInputFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_to_query, int input_index, HAPI_NodeId * connected_node_id);
    typedef HAPI_Result (*QueryNodeOutputConnectedCountFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int output_idx, HAPI_Bool into_subnets, HAPI_Bool through_dots, int * connected_count);
    typedef HAPI_Result (*QueryNodeOutputConnectedNodesFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int output_idx, HAPI_Bool into_subnets, HAPI_Bool through_dots, HAPI_NodeId * connected_node_ids_array, int start, int length);
    typedef HAPI_Result (*RemoveCustomStringFuncPtr)(const HAPI_Session * session, const HAPI_StringHandle string_handle);
    typedef HAPI_Result (*RemoveMultiparmInstanceFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int instance_position);
    typedef HAPI_Result (*RemoveParmExpressionFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int index);
    typedef HAPI_Result (*RenameNodeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * new_name);
    typedef HAPI_Result (*RenderCOP2ToImageFuncPtr)(const HAPI_Session * session, HAPI_NodeId cop_node_id);
    typedef HAPI_Result (*RenderTextureToImageFuncPtr)(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_ParmId parm_id);
    typedef HAPI_Result (*ResetSimulationFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id);
    typedef HAPI_Result (*RevertGeoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id);
    typedef HAPI_Result (*RevertParmToDefaultFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index);
    typedef HAPI_Result (*RevertParmToDefaultsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name);
    typedef HAPI_Result (*SaveGeoToFileFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * file_name);
    typedef HAPI_Result (*SaveGeoToMemoryFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, char * buffer, int length);
    typedef HAPI_Result (*SaveHIPFileFuncPtr)(const HAPI_Session * session, const char * file_path, HAPI_Bool lock_nodes);
    typedef HAPI_Result (*SaveNodeToFileFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * file_name);
    typedef HAPI_Result (*SetAnimCurveFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int parm_index, const HAPI_Keyframe * curve_keyframes_array, int keyframe_count);
    typedef HAPI_Result (*SetAttributeFloat64ArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const double * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*SetAttributeFloat64DataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const double * data_array, int start, int length);
    typedef HAPI_Result (*SetAttributeFloatArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const float * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*SetAttributeFloatDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const float * data_array, int start, int length);
    typedef HAPI_Result (*SetAttributeInt16ArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int16 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*SetAttributeInt16DataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int16 * data_array, int start, int length);
    typedef HAPI_Result (*SetAttributeInt64ArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int64 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*SetAttributeInt64DataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int64 * data_array, int start, int length);
    typedef HAPI_Result (*SetAttributeInt8ArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int8 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*SetAttributeInt8DataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int8 * data_array, int start, int length);
    typedef HAPI_Result (*SetAttributeIntArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const int * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*SetAttributeIntDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const int * data_array, int start, int length);
    typedef HAPI_Result (*SetAttributeStringArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const char ** data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*SetAttributeStringDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const char ** data_array, int start, int length);
    typedef HAPI_Result (*SetAttributeUInt8ArrayDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_UInt8 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    typedef HAPI_Result (*SetAttributeUInt8DataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_UInt8 * data_array, int start, int length);
    typedef HAPI_Result (*SetCachePropertyFuncPtr)(const HAPI_Session * session, const char * cache_name, HAPI_CacheProperty cache_property, int property_value);
    typedef HAPI_Result (*SetCompositorOptionsFuncPtr)(const HAPI_Session * session, const HAPI_CompositorOptions * compositor_options);
    typedef HAPI_Result (*SetCurveCountsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * counts_array, int start, int length);
    typedef HAPI_Result (*SetCurveInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_CurveInfo * info);
    typedef HAPI_Result (*SetCurveKnotsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const float * knots_array, int start, int length);
    typedef HAPI_Result (*SetCurveOrdersFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * orders_array, int start, int length);
    typedef HAPI_Result (*SetCustomStringFuncPtr)(const HAPI_Session * session, const char * string_value, HAPI_StringHandle * handle_value);
    typedef HAPI_Result (*SetFaceCountsFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * face_counts_array, int start, int length);
    typedef HAPI_Result (*SetGroupMembershipFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, const int * membership_array, int start, int length);
    typedef HAPI_Result (*SetHeightFieldDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const float * values_array, int start, int length);
    typedef HAPI_Result (*SetImageInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId material_node_id, const HAPI_ImageInfo * image_info);
    typedef HAPI_Result (*SetInputCurveInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_InputCurveInfo * info);
    typedef HAPI_Result (*SetInputCurvePositionsFuncPtr)(const HAPI_Session* session, HAPI_NodeId node_id, HAPI_PartId part_id, const float* positions_array, int start, int length);
    typedef HAPI_Result (*SetInputCurvePositionsRotationsScalesFuncPtr)(const HAPI_Session* session, HAPI_NodeId node_id, HAPI_PartId part_id, const float* positions_array, int positions_start, int positions_length, const float* rotations_array, int rotations_start, int rotations_length, const float * scales_array, int scales_start, int scales_length);
    typedef HAPI_Result (*SetNodeDisplayFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, int onOff);
    typedef HAPI_Result (*SetObjectTransformFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const HAPI_TransformEuler * trans);
    typedef HAPI_Result (*SetParmExpressionFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * value, HAPI_ParmId parm_id, int index);
    typedef HAPI_Result (*SetParmFloatValueFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, float value);
    typedef HAPI_Result (*SetParmFloatValuesFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const float * values_array, int start, int length);
    typedef HAPI_Result (*SetParmIntValueFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, int value);
    typedef HAPI_Result (*SetParmIntValuesFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const int * values_array, int start, int length);
    typedef HAPI_Result (*SetParmNodeValueFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_NodeId value);
    typedef HAPI_Result (*SetParmStringValueFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, const char * value, HAPI_ParmId parm_id, int index);
    typedef HAPI_Result (*SetPartInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_PartInfo * part_info);
    typedef HAPI_Result (*SetPresetFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PresetType preset_type, const char * preset_name, const char * buffer, int buffer_length);
    typedef HAPI_Result (*SetServerEnvIntFuncPtr)(const HAPI_Session * session, const char * variable_name, int value);
    typedef HAPI_Result (*SetServerEnvStringFuncPtr)(const HAPI_Session * session, const char * variable_name, const char * value);
    typedef HAPI_Result (*SetSessionSyncFuncPtr)(const HAPI_Session * session, HAPI_Bool enable);
    typedef HAPI_Result (*SetSessionSyncInfoFuncPtr)(const HAPI_Session * session, const HAPI_SessionSyncInfo * session_sync_info);
    typedef HAPI_Result (*SetTimeFuncPtr)(const HAPI_Session * session, float time);
    typedef HAPI_Result (*SetTimelineOptionsFuncPtr)(const HAPI_Session * session, const HAPI_TimelineOptions * timeline_options);
    typedef HAPI_Result (*SetTransformAnimCurveFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_TransformComponent trans_comp, const HAPI_Keyframe * curve_keyframes_array, int keyframe_count);
    typedef HAPI_Result (*SetUseHoudiniTimeFuncPtr)(const HAPI_Session * session, HAPI_Bool enabled);
    typedef HAPI_Result (*SetVertexListFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * vertex_list_array, int start, int length);
    typedef HAPI_Result (*SetViewportFuncPtr)(const HAPI_Session * session, const HAPI_Viewport * viewport);
    typedef HAPI_Result (*SetVolumeInfoFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeInfo * volume_info);
    typedef HAPI_Result (*SetVolumeTileFloatDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeTileInfo * tile, const float * values_array, int length);
    typedef HAPI_Result (*SetVolumeTileIntDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeTileInfo * tile, const int * values_array, int length);
    typedef HAPI_Result (*SetVolumeVoxelFloatDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, const float * values_array, int value_count);
    typedef HAPI_Result (*SetVolumeVoxelIntDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, const int * values_array, int value_count);
    typedef HAPI_Result (*SetWorkItemFloatAttributeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, const float * values_array, int length);
    typedef HAPI_Result (*SetWorkItemIntAttributeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, const int * values_array, int length);
    typedef HAPI_Result (*SetWorkItemStringAttributeFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, int data_index, const char * value);
    typedef HAPI_Result (*SetWorkitemFloatDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, const float * values_array, int length);
    typedef HAPI_Result (*SetWorkitemIntDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, const int * values_array, int length);
    typedef HAPI_Result (*SetWorkitemStringDataFuncPtr)(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, int data_index, const char * value);
    typedef HAPI_Result (*ShutdownFuncPtr)(const HAPI_Session * session);
    typedef HAPI_Result (*StartThriftNamedPipeServerFuncPtr)(const HAPI_ThriftServerOptions * options, const char * pipe_name, HAPI_ProcessId * process_id, const char * log_file);
    typedef HAPI_Result (*StartThriftSocketServerFuncPtr)(const HAPI_ThriftServerOptions * options, int port, HAPI_ProcessId * process_id, const char * log_file);


    static bool AddAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info);
    static bool AddGroup(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name);
    static bool BindCustomImplementation(HAPI_SessionType session_type, const char * dll_path);
    static bool CancelPDGCook(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id);
    static bool CheckForSpecificErrors(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ErrorCodeBits errors_to_look_for, HAPI_ErrorCodeBits * errors_found);
    static bool Cleanup(const HAPI_Session * session);
    static bool ClearConnectionError();
    static bool CloseSession(const HAPI_Session * session);
    static bool CommitGeo(const HAPI_Session * session, HAPI_NodeId node_id);
    static bool CommitWorkItems(const HAPI_Session * session, HAPI_NodeId node_id);
    static bool CommitWorkitems(const HAPI_Session * session, HAPI_NodeId node_id);
    static bool ComposeChildNodeList(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_NodeTypeBits node_type_filter, HAPI_NodeFlagsBits node_flags_filter, HAPI_Bool recursive, int * count);
    static bool ComposeNodeCookResult(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_StatusVerbosity verbosity, int * buffer_length);
    static bool ComposeObjectList(const HAPI_Session * session, HAPI_NodeId parent_node_id, const char * categories, int * object_count);
    static bool ConnectNodeInput(const HAPI_Session * session, HAPI_NodeId node_id, int input_index, HAPI_NodeId node_id_to_connect, int output_index);
    static bool ConvertMatrixToEuler(const HAPI_Session * session, const float * matrix, HAPI_RSTOrder rst_order, HAPI_XYZOrder rot_order, HAPI_TransformEuler * transform_out);
    static bool ConvertMatrixToQuat(const HAPI_Session * session, const float * matrix, HAPI_RSTOrder rst_order, HAPI_Transform * transform_out);
    static bool ConvertTransform(const HAPI_Session * session, const HAPI_TransformEuler * transform_in, HAPI_RSTOrder rst_order, HAPI_XYZOrder rot_order, HAPI_TransformEuler * transform_out);
    static bool ConvertTransformEulerToMatrix(const HAPI_Session * session, const HAPI_TransformEuler * transform, float * matrix);
    static bool ConvertTransformQuatToMatrix(const HAPI_Session * session, const HAPI_Transform * transform, float * matrix);
    static bool CookNode(const HAPI_Session * session, HAPI_NodeId node_id, const HAPI_CookOptions * cook_options);
    static bool CookPDG(const HAPI_Session * session, HAPI_NodeId cook_node_id, int generate_only, int blocking);
    static bool CookPDGAllOutputs(const HAPI_Session* session, HAPI_NodeId cook_node_id, int generate_only, int blocking);
    static bool CreateCustomSession(HAPI_SessionType session_type, void * session_info, HAPI_Session * session);
    static bool CreateHeightFieldInput(const HAPI_Session * session, HAPI_NodeId parent_node_id, const char * name, int xsize, int ysize, float voxelsize, HAPI_HeightFieldSampling sampling, HAPI_NodeId * heightfield_node_id, HAPI_NodeId * height_node_id, HAPI_NodeId * mask_node_id, HAPI_NodeId * merge_node_id);
    static bool CreateHeightfieldInputVolumeNode(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_NodeId * new_node_id, const char * name, int xsize, int ysize, float voxelsize);
    static bool CreateInProcessSession(HAPI_Session * session);
    static bool CreateInputCurveNode(const HAPI_Session * session, HAPI_NodeId * node_id, const char * name);
    static bool CreateInputNode(const HAPI_Session * session, HAPI_NodeId * node_id, const char * name);
    static bool CreateNode(const HAPI_Session * session, HAPI_NodeId parent_node_id, const char * operator_name, const char * node_label, HAPI_Bool cook_on_creation, HAPI_NodeId * new_node_id);
    static bool CreateThriftNamedPipeSession(HAPI_Session * session, const char * pipe_name);
    static bool CreateThriftSocketSession(HAPI_Session * session, const char * host_name, int port);
    static bool CreateWorkItem(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId * work_item_id, const char * name, int index);
    static bool CreateWorkitem(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId * workitem_id, const char * name, int index);
    static bool DeleteAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info);
    static bool DeleteGroup(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name);
    static bool DeleteNode(const HAPI_Session * session, HAPI_NodeId node_id);
    static bool DirtyPDGNode(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Bool clean_results);
    static bool DisconnectNodeInput(const HAPI_Session * session, HAPI_NodeId node_id, int input_index);
    static bool DisconnectNodeOutputsAt(const HAPI_Session * session, HAPI_NodeId node_id, int output_index);
    static bool ExtractImageToFile(const HAPI_Session * session, HAPI_NodeId material_node_id, const char * image_file_format_name, const char * image_planes, const char * destination_folder_path, const char * destination_file_name, int * destination_file_path);
    static bool ExtractImageToMemory(const HAPI_Session * session, HAPI_NodeId material_node_id, const char * image_file_format_name, const char * image_planes, int * buffer_size);
    static bool GetActiveCacheCount(const HAPI_Session * session, int * active_cache_count);
    static bool GetActiveCacheNames(const HAPI_Session * session, HAPI_StringHandle * cache_names_array, int active_cache_count);
    static bool GetAssetDefinitionParmCounts(const HAPI_Session * session, HAPI_AssetLibraryId library_id, const char * asset_name, int * parm_count, int * int_value_count, int * float_value_count, int * string_value_count, int * choice_value_count);
    static bool GetAssetDefinitionParmInfos(const HAPI_Session * session, HAPI_AssetLibraryId library_id, const char * asset_name, HAPI_ParmInfo * parm_infos_array, int start, int length);
    static bool GetAssetDefinitionParmValues(const HAPI_Session * session, HAPI_AssetLibraryId library_id, const char * asset_name, int * int_values_array, int int_start, int int_length, float * float_values_array, int float_start, int float_length, HAPI_Bool string_evaluate, HAPI_StringHandle * string_values_array, int string_start, int string_length, HAPI_ParmChoiceInfo * choice_values_array, int choice_start, int choice_length);
    static bool GetAssetInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_AssetInfo * asset_info);
    static bool GetAttributeFloat64ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, double * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool GetAttributeFloat64Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, double * data_array, int start, int length);
    static bool GetAttributeFloatArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, float * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool GetAttributeFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, float * data_array, int start, int length);
    static bool GetAttributeInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeOwner owner, HAPI_AttributeInfo * attr_info);
    static bool GetAttributeInt16ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_Int16 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool GetAttributeInt16Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_Int16 * data_array, int start, int length);
    static bool GetAttributeInt64ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_Int64 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool GetAttributeInt64Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_Int64 * data_array, int start, int length);
    static bool GetAttributeInt8ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_Int8 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool GetAttributeInt8Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_Int8 * data_array, int start, int length);
    static bool GetAttributeIntArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool GetAttributeIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, int * data_array, int start, int length);
    static bool GetAttributeNames(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_AttributeOwner owner, HAPI_StringHandle * attribute_names_array, int count);
    static bool GetAttributeStringArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_StringHandle * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool GetAttributeStringData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_StringHandle * data_array, int start, int length);
    static bool GetAttributeUInt8ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_UInt8 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool GetAttributeUInt8Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_UInt8 * data_array, int start, int length);
    static bool GetAvailableAssetCount(const HAPI_Session * session, HAPI_AssetLibraryId library_id, int * asset_count);
    static bool GetAvailableAssets(const HAPI_Session * session, HAPI_AssetLibraryId library_id, HAPI_StringHandle * asset_names_array, int asset_count);
    static bool GetBoxInfo(const HAPI_Session * session, HAPI_NodeId geo_node_id, HAPI_PartId part_id, HAPI_BoxInfo * box_info);
    static bool GetCacheProperty(const HAPI_Session * session, const char * cache_name, HAPI_CacheProperty cache_property, int * property_value);
    static bool GetComposedChildNodeList(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_NodeId * child_node_ids_array, int count);
    static bool GetComposedNodeCookResult(const HAPI_Session * session, char * string_value, int length);
    static bool GetComposedObjectList(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_ObjectInfo * object_infos_array, int start, int length);
    static bool GetComposedObjectTransforms(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_RSTOrder rst_order, HAPI_Transform * transform_array, int start, int length);
    static bool GetCompositorOptions(const HAPI_Session * session, HAPI_CompositorOptions * compositor_options);
    static bool GetConnectionError(char * string_value, int length, HAPI_Bool clear);
    static bool GetConnectionErrorLength(int * buffer_length);
    static bool GetCookingCurrentCount(const HAPI_Session * session, int * count);
    static bool GetCookingTotalCount(const HAPI_Session * session, int * count);
    static bool GetCurveCounts(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * counts_array, int start, int length);
    static bool GetCurveInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_CurveInfo * info);
    static bool GetCurveKnots(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float * knots_array, int start, int length);
    static bool GetCurveOrders(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * orders_array, int start, int length);
    static bool GetDisplayGeoInfo(const HAPI_Session * session, HAPI_NodeId object_node_id, HAPI_GeoInfo * geo_info);
    static bool GetEdgeCountOfEdgeGroup(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * group_name, int * edge_count);
    static bool GetEnvInt(HAPI_EnvIntType int_type, int * value);
    static bool GetFaceCounts(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * face_counts_array, int start, int length);
    static bool GetFirstVolumeTile(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeTileInfo * tile);
    static bool GetGeometryInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_GeoInfo * geo_info);
    static bool GetGeoSize(const HAPI_Session * session, HAPI_NodeId node_id, const char * format, int * size);
    static bool GetGroupCountOnPackedInstancePart(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * pointGroupCount, int * primitiveGroupCount);
    static bool GetGroupMembership(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, HAPI_Bool * membership_array_all_equal, int * membership_array, int start, int length);
    static bool GetGroupMembershipOnPackedInstancePart(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, HAPI_Bool * membership_array_all_equal, int * membership_array, int start, int length);
    static bool GetGroupNames(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_GroupType group_type, HAPI_StringHandle * group_names_array, int group_count);
    static bool GetGroupNamesOnPackedInstancePart(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, HAPI_StringHandle * group_names_array, int group_count);
    static bool GetHIPFileNodeCount(const HAPI_Session * session, HAPI_HIPFileId id, int * count);
    static bool GetHIPFileNodeIds(const HAPI_Session * session, HAPI_HIPFileId id, HAPI_NodeId * node_ids, int length);
    static bool GetHandleBindingInfo(const HAPI_Session * session, HAPI_NodeId node_id, int handle_index, HAPI_HandleBindingInfo * handle_binding_infos_array, int start, int length);
    static bool GetHandleInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_HandleInfo * handle_infos_array, int start, int length);
    static bool GetHeightFieldData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float * values_array, int start, int length);
    static bool GetImageFilePath(const HAPI_Session * session, HAPI_NodeId material_node_id, const char * image_file_format_name, const char * image_planes, const char * destination_folder_path, const char * destination_file_name, HAPI_ParmId texture_parm_id, int * destination_file_path);
    static bool GetImageInfo(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_ImageInfo * image_info);
    static bool GetImageMemoryBuffer(const HAPI_Session * session, HAPI_NodeId material_node_id, char * buffer, int length);
    static bool GetImagePlaneCount(const HAPI_Session * session, HAPI_NodeId material_node_id, int * image_plane_count);
    static bool GetImagePlanes(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_StringHandle * image_planes_array, int image_plane_count);
    static bool GetInputCurveInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_InputCurveInfo * info);
    static bool GetInstanceTransformsOnPart(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_RSTOrder rst_order, HAPI_Transform * transforms_array, int start, int length);
    static bool GetInstancedObjectIds(const HAPI_Session * session, HAPI_NodeId object_node_id, HAPI_NodeId * instanced_node_id_array, int start, int length);
    static bool GetInstancedPartIds(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_PartId * instanced_parts_array, int start, int length);
    static bool GetInstancerPartTransforms(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_RSTOrder rst_order, HAPI_Transform * transforms_array, int start, int length);
    static bool GetManagerNodeId(const HAPI_Session * session, HAPI_NodeType node_type, HAPI_NodeId * node_id);
    static bool GetMaterialInfo(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_MaterialInfo * material_info);
    static bool GetMaterialNodeIdsOnFaces(const HAPI_Session * session, HAPI_NodeId geometry_node_id, HAPI_PartId part_id, HAPI_Bool * are_all_the_same, HAPI_NodeId * material_ids_array, int start, int length);
    static bool GetNextVolumeTile(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeTileInfo * tile);
    static bool GetNodeFromPath(const HAPI_Session * session, const HAPI_NodeId parent_node_id, const char * path, HAPI_NodeId * node_id);
    static bool GetNodeInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeInfo * node_info);
    static bool GetNodeInputName(const HAPI_Session * session, HAPI_NodeId node_id, int input_idx, HAPI_StringHandle * name);
    static bool GetNodeOutputName(const HAPI_Session * session, HAPI_NodeId node_id, int output_idx, HAPI_StringHandle * name);
    static bool GetNodePath(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeId relative_to_node_id, HAPI_StringHandle * path);
    static bool GetNumWorkItems(const HAPI_Session * session, HAPI_NodeId node_id, int * num);
    static bool GetNumWorkitems(const HAPI_Session * session, HAPI_NodeId node_id, int * num);
    static bool GetObjectInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ObjectInfo * object_info);
    static bool GetObjectTransform(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeId relative_to_node_id, HAPI_RSTOrder rst_order, HAPI_Transform * transform);
    static bool GetOutputGeoCount(const HAPI_Session* session, HAPI_NodeId node_id, int* count);
    static bool GetOutputGeoInfos(const HAPI_Session* session, HAPI_NodeId node_id, HAPI_GeoInfo* geo_infos_array, int count);
    static bool GetOutputNodeId(const HAPI_Session * session, HAPI_NodeId node_id, int output, HAPI_NodeId * output_node_id);
    static bool GetPDGEvents(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_EventInfo * event_array, int length, int * event_count, int * remaining_events);
    static bool GetPDGGraphContextId(const HAPI_Session * session, HAPI_NodeId top_node_id, HAPI_PDG_GraphContextId * context_id);
    static bool GetPDGGraphContexts(const HAPI_Session * session, HAPI_StringHandle * context_names_array, HAPI_PDG_GraphContextId * context_id_array, int start, int length);
    static bool GetPDGGraphContextsCount(const HAPI_Session* session, int* num_contexts);
    static bool GetPDGState(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, int * pdg_state);
    static bool GetParameters(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmInfo * parm_infos_array, int start, int length);
    static bool GetParmChoiceLists(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmChoiceInfo * parm_choices_array, int start, int length);
    static bool GetParmExpression(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_StringHandle * value);
    static bool GetParmFile(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, const char * destination_directory, const char * destination_file_name);
    static bool GetParmFloatValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, float * value);
    static bool GetParmFloatValues(const HAPI_Session * session, HAPI_NodeId node_id, float * values_array, int start, int length);
    static bool GetParmIdFromName(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_ParmId * parm_id);
    static bool GetParmInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, HAPI_ParmInfo * parm_info);
    static bool GetParmInfoFromName(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_ParmInfo * parm_info);
    static bool GetParmIntValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, int * value);
    static bool GetParmIntValues(const HAPI_Session * session, HAPI_NodeId node_id, int * values_array, int start, int length);
    static bool GetParmNodeValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_NodeId * value);
    static bool GetParmStringValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_Bool evaluate, HAPI_StringHandle * value);
    static bool GetParmStringValues(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Bool evaluate, HAPI_StringHandle * values_array, int start, int length);
    static bool GetParmTagName(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int tag_index, HAPI_StringHandle * tag_name);
    static bool GetParmTagValue(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, const char * tag_name, HAPI_StringHandle * tag_value);
    static bool GetParmWithTag(const HAPI_Session * session, HAPI_NodeId node_id, const char * tag_name, HAPI_ParmId * parm_id);
    static bool GetPartInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_PartInfo * part_info);
    static bool GetPreset(const HAPI_Session * session, HAPI_NodeId node_id, char * buffer, int buffer_length);
    static bool GetPresetBufLength(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PresetType preset_type, const char * preset_name, int * buffer_length);
    static bool GetServerEnvInt(const HAPI_Session * session, const char * variable_name, int * value);
    static bool GetServerEnvString(const HAPI_Session * session, const char * variable_name, HAPI_StringHandle * value);
    static bool GetServerEnvVarCount(const HAPI_Session * session, int * env_count);
    static bool GetServerEnvVarList(const HAPI_Session * session, HAPI_StringHandle * values_array, int start, int length);
    static bool GetSessionEnvInt(const HAPI_Session * session, HAPI_SessionEnvIntType int_type, int * value);
    static bool GetSessionSyncInfo(const HAPI_Session * session, HAPI_SessionSyncInfo * session_sync_info);
    static bool GetSphereInfo(const HAPI_Session * session, HAPI_NodeId geo_node_id, HAPI_PartId part_id, HAPI_SphereInfo * sphere_info);
    static bool GetStatus(const HAPI_Session * session, HAPI_StatusType status_type, int * status);
    static bool GetStatusString(const HAPI_Session * session, HAPI_StatusType status_type, char * string_value, int length);
    static bool GetStatusStringBufLength(const HAPI_Session * session, HAPI_StatusType status_type, HAPI_StatusVerbosity verbosity, int * buffer_length);
    static bool GetString(const HAPI_Session * session, HAPI_StringHandle string_handle, char * string_value, int length);
    static bool GetStringBatch(const HAPI_Session * session, char * char_buffer, int char_array_length);
    static bool GetStringBatchSize(const HAPI_Session * session, const int * string_handle_array, int string_handle_count, int * string_buffer_size);
    static bool GetStringBufLength(const HAPI_Session * session, HAPI_StringHandle string_handle, int * buffer_length);
    static bool GetSupportedImageFileFormatCount(const HAPI_Session * session, int * file_format_count);
    static bool GetSupportedImageFileFormats(const HAPI_Session * session, HAPI_ImageFileFormat * formats_array, int file_format_count);
    static bool GetTime(const HAPI_Session * session, float * time);
    static bool GetTimelineOptions(const HAPI_Session * session, HAPI_TimelineOptions * timeline_options);
    static bool GetTotalCookCount(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeTypeBits node_type_filter, HAPI_NodeFlagsBits node_flags_filter, HAPI_Bool recursive, int * count);
    static bool GetUseHoudiniTime(const HAPI_Session * session, HAPI_Bool * enabled);
    static bool GetVertexList(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * vertex_list_array, int start, int length);
    static bool GetViewport(const HAPI_Session * session, HAPI_Viewport * viewport);
    static bool GetVolumeBounds(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float * x_min, float * y_min, float * z_min, float * x_max, float * y_max, float * z_max, float * x_center, float * y_center, float * z_center);
    static bool GetVolumeInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeInfo * volume_info);
    static bool GetVolumeTileFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float fill_value, const HAPI_VolumeTileInfo * tile, float * values_array, int length);
    static bool GetVolumeTileIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int fill_value, const HAPI_VolumeTileInfo * tile, int * values_array, int length);
    static bool GetVolumeVisualInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeVisualInfo * visual_info);
    static bool GetVolumeVoxelFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, float * values_array, int value_count);
    static bool GetVolumeVoxelIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, int * values_array, int value_count);
    static bool GetWorkItemAttributeSize(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, int * length);
    static bool GetWorkItemFloatAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, float * data_array, int length);
    static bool GetWorkItemInfo(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_WorkItemId work_item_id, HAPI_PDG_WorkItemInfo * work_item_info);
    static bool GetWorkItemIntAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, int * data_array, int length);
    static bool GetWorkItemOutputFiles(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, HAPI_PDG_WorkItemOutputFile * resultinfo_array, int resultinfo_count);
    static bool GetWorkItemStringAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, HAPI_StringHandle * data_array, int length);
    static bool GetWorkItems(const HAPI_Session * session, HAPI_NodeId node_id, int * work_item_ids_array, int length);
    static bool GetWorkitemDataLength(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, int * length);
    static bool GetWorkitemFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, float * data_array, int length);
    static bool GetWorkitemInfo(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_WorkItemId workitem_id, HAPI_PDG_WorkItemInfo * workitem_info);
    static bool GetWorkitemIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, int * data_array, int length);
    static bool GetWorkitemResultInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, HAPI_PDG_WorkItemOutputFile * resultinfo_array, int resultinfo_count);
    static bool GetWorkitemStringData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, HAPI_StringHandle * data_array, int length);
    static bool GetWorkitems(const HAPI_Session * session, HAPI_NodeId node_id, int * workitem_ids_array, int length);
    static bool Initialize(const HAPI_Session * session, const HAPI_CookOptions * cook_options, HAPI_Bool use_cooking_thread, int cooking_thread_stack_size, const char * houdini_environment_files, const char * otl_search_path, const char * dso_search_path, const char * image_dso_search_path, const char * audio_dso_search_path);
    static bool InsertMultiparmInstance(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int instance_position);
    static bool Interrupt(const HAPI_Session * session);
    static bool IsInitialized(const HAPI_Session * session);
    static bool IsNodeValid(const HAPI_Session * session, HAPI_NodeId node_id, int unique_node_id, HAPI_Bool * answer);
    static bool IsSessionValid(const HAPI_Session * session);
    static bool LoadAssetLibraryFromFile(const HAPI_Session * session, const char * file_path, HAPI_Bool allow_overwrite, HAPI_AssetLibraryId * library_id);
    static bool LoadAssetLibraryFromMemory(const HAPI_Session * session, const char * library_buffer, int library_buffer_length, HAPI_Bool allow_overwrite, HAPI_AssetLibraryId * library_id);
    static bool LoadGeoFromFile(const HAPI_Session * session, HAPI_NodeId node_id, const char * file_name);
    static bool LoadGeoFromMemory(const HAPI_Session * session, HAPI_NodeId node_id, const char * format, const char * buffer, int length);
    static bool LoadHIPFile(const HAPI_Session * session, const char * file_name, HAPI_Bool cook_on_load);
    static bool LoadNodeFromFile(const HAPI_Session * session, const char * file_name, HAPI_NodeId parent_node_id, const char * node_label, HAPI_Bool cook_on_load, HAPI_NodeId * new_node_id);
    static bool MergeHIPFile(const HAPI_Session * session, const char * file_name, HAPI_Bool cook_on_load, HAPI_HIPFileId * file_id);
    static bool ParmHasExpression(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_Bool * has_expression);
    static bool ParmHasTag(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, const char * tag_name, HAPI_Bool * has_tag);
    static bool PausePDGCook(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id);
    static bool PythonThreadInterpreterLock(const HAPI_Session * session, HAPI_Bool locked);
    static bool QueryNodeInput(const HAPI_Session * session, HAPI_NodeId node_to_query, int input_index, HAPI_NodeId * connected_node_id);
    static bool QueryNodeOutputConnectedCount(const HAPI_Session * session, HAPI_NodeId node_id, int output_idx, HAPI_Bool into_subnets, HAPI_Bool through_dots, int * connected_count);
    static bool QueryNodeOutputConnectedNodes(const HAPI_Session * session, HAPI_NodeId node_id, int output_idx, HAPI_Bool into_subnets, HAPI_Bool through_dots, HAPI_NodeId * connected_node_ids_array, int start, int length);
    static bool RemoveCustomString(const HAPI_Session * session, const HAPI_StringHandle string_handle);
    static bool RemoveMultiparmInstance(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int instance_position);
    static bool RemoveParmExpression(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int index);
    static bool RenameNode(const HAPI_Session * session, HAPI_NodeId node_id, const char * new_name);
    static bool RenderCOP2ToImage(const HAPI_Session * session, HAPI_NodeId cop_node_id);
    static bool RenderTextureToImage(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_ParmId parm_id);
    static bool ResetSimulation(const HAPI_Session * session, HAPI_NodeId node_id);
    static bool RevertGeo(const HAPI_Session * session, HAPI_NodeId node_id);
    static bool RevertParmToDefault(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index);
    static bool RevertParmToDefaults(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name);
    static bool SaveGeoToFile(const HAPI_Session * session, HAPI_NodeId node_id, const char * file_name);
    static bool SaveGeoToMemory(const HAPI_Session * session, HAPI_NodeId node_id, char * buffer, int length);
    static bool SaveHIPFile(const HAPI_Session * session, const char * file_path, HAPI_Bool lock_nodes);
    static bool SaveNodeToFile(const HAPI_Session * session, HAPI_NodeId node_id, const char * file_name);
    static bool SetAnimCurve(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int parm_index, const HAPI_Keyframe * curve_keyframes_array, int keyframe_count);
    static bool SetAttributeFloat64ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const double * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool SetAttributeFloat64Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const double * data_array, int start, int length);
    static bool SetAttributeFloatArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const float * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool SetAttributeFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const float * data_array, int start, int length);
    static bool SetAttributeInt16ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int16 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool SetAttributeInt16Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int16 * data_array, int start, int length);
    static bool SetAttributeInt64ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int64 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool SetAttributeInt64Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int64 * data_array, int start, int length);
    static bool SetAttributeInt8ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int8 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool SetAttributeInt8Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int8 * data_array, int start, int length);
    static bool SetAttributeIntArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const int * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool SetAttributeIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const int * data_array, int start, int length);
    static bool SetAttributeStringArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const char ** data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool SetAttributeStringData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const char ** data_array, int start, int length);
    static bool SetAttributeUInt8ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_UInt8 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static bool SetAttributeUInt8Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_UInt8 * data_array, int start, int length);
    static bool SetCacheProperty(const HAPI_Session * session, const char * cache_name, HAPI_CacheProperty cache_property, int property_value);
    static bool SetCompositorOptions(const HAPI_Session * session, const HAPI_CompositorOptions * compositor_options);
    static bool SetCurveCounts(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * counts_array, int start, int length);
    static bool SetCurveInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_CurveInfo * info);
    static bool SetCurveKnots(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const float * knots_array, int start, int length);
    static bool SetCurveOrders(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * orders_array, int start, int length);
    static bool SetCustomString(const HAPI_Session * session, const char * string_value, HAPI_StringHandle * handle_value);
    static bool SetFaceCounts(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * face_counts_array, int start, int length);
    static bool SetGroupMembership(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, const int * membership_array, int start, int length);
    static bool SetHeightFieldData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const float * values_array, int start, int length);
    static bool SetImageInfo(const HAPI_Session * session, HAPI_NodeId material_node_id, const HAPI_ImageInfo * image_info);
    static bool SetInputCurveInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_InputCurveInfo * info);
    static bool SetInputCurvePositions(const HAPI_Session* session, HAPI_NodeId node_id, HAPI_PartId part_id, const float* positions_array, int start, int length);
    static bool SetInputCurvePositionsRotationsScales(const HAPI_Session* session, HAPI_NodeId node_id, HAPI_PartId part_id, const float* positions_array, int positions_start, int positions_length, const float* rotations_array, int rotations_start, int rotations_length, const float * scales_array, int scales_start, int scales_length);
    static bool SetNodeDisplay(const HAPI_Session * session, HAPI_NodeId node_id, int onOff);
    static bool SetObjectTransform(const HAPI_Session * session, HAPI_NodeId node_id, const HAPI_TransformEuler * trans);
    static bool SetParmExpression(const HAPI_Session * session, HAPI_NodeId node_id, const char * value, HAPI_ParmId parm_id, int index);
    static bool SetParmFloatValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, float value);
    static bool SetParmFloatValues(const HAPI_Session * session, HAPI_NodeId node_id, const float * values_array, int start, int length);
    static bool SetParmIntValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, int value);
    static bool SetParmIntValues(const HAPI_Session * session, HAPI_NodeId node_id, const int * values_array, int start, int length);
    static bool SetParmNodeValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_NodeId value);
    static bool SetParmStringValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * value, HAPI_ParmId parm_id, int index);
    static bool SetPartInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_PartInfo * part_info);
    static bool SetPreset(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PresetType preset_type, const char * preset_name, const char * buffer, int buffer_length);
    static bool SetServerEnvInt(const HAPI_Session * session, const char * variable_name, int value);
    static bool SetServerEnvString(const HAPI_Session * session, const char * variable_name, const char * value);
    static bool SetSessionSync(const HAPI_Session * session, HAPI_Bool enable);
    static bool SetSessionSyncInfo(const HAPI_Session * session, const HAPI_SessionSyncInfo * session_sync_info);
    static bool SetTime(const HAPI_Session * session, float time);
    static bool SetTimelineOptions(const HAPI_Session * session, const HAPI_TimelineOptions * timeline_options);
    static bool SetTransformAnimCurve(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_TransformComponent trans_comp, const HAPI_Keyframe * curve_keyframes_array, int keyframe_count);
    static bool SetUseHoudiniTime(const HAPI_Session * session, HAPI_Bool enabled);
    static bool SetVertexList(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * vertex_list_array, int start, int length);
    static bool SetViewport(const HAPI_Session * session, const HAPI_Viewport * viewport);
    static bool SetVolumeInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeInfo * volume_info);
    static bool SetVolumeTileFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeTileInfo * tile, const float * values_array, int length);
    static bool SetVolumeTileIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeTileInfo * tile, const int * values_array, int length);
    static bool SetVolumeVoxelFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, const float * values_array, int value_count);
    static bool SetVolumeVoxelIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, const int * values_array, int value_count);
    static bool SetWorkItemFloatAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, const float * values_array, int length);
    static bool SetWorkItemIntAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, const int * values_array, int length);
    static bool SetWorkItemStringAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, int data_index, const char * value);
    static bool SetWorkitemFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, const float * values_array, int length);
    static bool SetWorkitemIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, const int * values_array, int length);
    static bool SetWorkitemStringData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, int data_index, const char * value);
    static bool Shutdown(const HAPI_Session * session);
    static bool StartThriftNamedPipeServer(const HAPI_ThriftServerOptions * options, const char * pipe_name, HAPI_ProcessId * process_id, const char * log_file);
    static bool StartThriftSocketServer(const HAPI_ThriftServerOptions * options, int port, HAPI_ProcessId * process_id, const char * log_file);


    static bool AddAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, HAPI_Result& result);
    static bool AddGroup(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, HAPI_Result& result);
    static bool BindCustomImplementation(HAPI_SessionType session_type, const char * dll_path, HAPI_Result& result);
    static bool CancelPDGCook(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_Result& result);
    static bool CheckForSpecificErrors(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ErrorCodeBits errors_to_look_for, HAPI_ErrorCodeBits * errors_found, HAPI_Result& result);
    static bool Cleanup(const HAPI_Session * session, HAPI_Result& result);
    static bool ClearConnectionError(HAPI_Result& result);
    static bool CloseSession(const HAPI_Session * session, HAPI_Result& result);
    static bool CommitGeo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Result& result);
    static bool CommitWorkItems(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Result& result);
    static bool CommitWorkitems(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Result& result);
    static bool ComposeChildNodeList(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_NodeTypeBits node_type_filter, HAPI_NodeFlagsBits node_flags_filter, HAPI_Bool recursive, int * count, HAPI_Result& result);
    static bool ComposeNodeCookResult(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_StatusVerbosity verbosity, int * buffer_length, HAPI_Result& result);
    static bool ComposeObjectList(const HAPI_Session * session, HAPI_NodeId parent_node_id, const char * categories, int * object_count, HAPI_Result& result);
    static bool ConnectNodeInput(const HAPI_Session * session, HAPI_NodeId node_id, int input_index, HAPI_NodeId node_id_to_connect, int output_index, HAPI_Result& result);
    static bool ConvertMatrixToEuler(const HAPI_Session * session, const float * matrix, HAPI_RSTOrder rst_order, HAPI_XYZOrder rot_order, HAPI_TransformEuler * transform_out, HAPI_Result& result);
    static bool ConvertMatrixToQuat(const HAPI_Session * session, const float * matrix, HAPI_RSTOrder rst_order, HAPI_Transform * transform_out, HAPI_Result& result);
    static bool ConvertTransform(const HAPI_Session * session, const HAPI_TransformEuler * transform_in, HAPI_RSTOrder rst_order, HAPI_XYZOrder rot_order, HAPI_TransformEuler * transform_out, HAPI_Result& result);
    static bool ConvertTransformEulerToMatrix(const HAPI_Session * session, const HAPI_TransformEuler * transform, float * matrix, HAPI_Result& result);
    static bool ConvertTransformQuatToMatrix(const HAPI_Session * session, const HAPI_Transform * transform, float * matrix, HAPI_Result& result);
    static bool CookNode(const HAPI_Session * session, HAPI_NodeId node_id, const HAPI_CookOptions * cook_options, HAPI_Result& result);
    static bool CookPDG(const HAPI_Session * session, HAPI_NodeId cook_node_id, int generate_only, int blocking, HAPI_Result& result);
    static bool CookPDGAllOutputs(const HAPI_Session* session, HAPI_NodeId cook_node_id, int generate_only, int blocking, HAPI_Result& result);
    static bool CreateCustomSession(HAPI_SessionType session_type, void * session_info, HAPI_Session * session, HAPI_Result& result);
    static bool CreateHeightFieldInput(const HAPI_Session * session, HAPI_NodeId parent_node_id, const char * name, int xsize, int ysize, float voxelsize, HAPI_HeightFieldSampling sampling, HAPI_NodeId * heightfield_node_id, HAPI_NodeId * height_node_id, HAPI_NodeId * mask_node_id, HAPI_NodeId * merge_node_id, HAPI_Result& result);
    static bool CreateHeightfieldInputVolumeNode(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_NodeId * new_node_id, const char * name, int xsize, int ysize, float voxelsize, HAPI_Result& result);
    static bool CreateInProcessSession(HAPI_Session * session, HAPI_Result& result);
    static bool CreateInputCurveNode(const HAPI_Session * session, HAPI_NodeId * node_id, const char * name, HAPI_Result& result);
    static bool CreateInputNode(const HAPI_Session * session, HAPI_NodeId * node_id, const char * name, HAPI_Result& result);
    static bool CreateNode(const HAPI_Session * session, HAPI_NodeId parent_node_id, const char * operator_name, const char * node_label, HAPI_Bool cook_on_creation, HAPI_NodeId * new_node_id, HAPI_Result& result);
    static bool CreateThriftNamedPipeSession(HAPI_Session * session, const char * pipe_name, HAPI_Result& result);
    static bool CreateThriftSocketSession(HAPI_Session * session, const char * host_name, int port, HAPI_Result& result);
    static bool CreateWorkItem(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId * work_item_id, const char * name, int index, HAPI_Result& result);
    static bool CreateWorkitem(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId * workitem_id, const char * name, int index, HAPI_Result& result);
    static bool DeleteAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, HAPI_Result& result);
    static bool DeleteGroup(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, HAPI_Result& result);
    static bool DeleteNode(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Result& result);
    static bool DirtyPDGNode(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Bool clean_results, HAPI_Result& result);
    static bool DisconnectNodeInput(const HAPI_Session * session, HAPI_NodeId node_id, int input_index, HAPI_Result& result);
    static bool DisconnectNodeOutputsAt(const HAPI_Session * session, HAPI_NodeId node_id, int output_index, HAPI_Result& result);
    static bool ExtractImageToFile(const HAPI_Session * session, HAPI_NodeId material_node_id, const char * image_file_format_name, const char * image_planes, const char * destination_folder_path, const char * destination_file_name, int * destination_file_path, HAPI_Result& result);
    static bool ExtractImageToMemory(const HAPI_Session * session, HAPI_NodeId material_node_id, const char * image_file_format_name, const char * image_planes, int * buffer_size, HAPI_Result& result);
    static bool GetActiveCacheCount(const HAPI_Session * session, int * active_cache_count, HAPI_Result& result);
    static bool GetActiveCacheNames(const HAPI_Session * session, HAPI_StringHandle * cache_names_array, int active_cache_count, HAPI_Result& result);
    static bool GetAssetDefinitionParmCounts(const HAPI_Session * session, HAPI_AssetLibraryId library_id, const char * asset_name, int * parm_count, int * int_value_count, int * float_value_count, int * string_value_count, int * choice_value_count, HAPI_Result& result);
    static bool GetAssetDefinitionParmInfos(const HAPI_Session * session, HAPI_AssetLibraryId library_id, const char * asset_name, HAPI_ParmInfo * parm_infos_array, int start, int length, HAPI_Result& result);
    static bool GetAssetDefinitionParmValues(const HAPI_Session * session, HAPI_AssetLibraryId library_id, const char * asset_name, int * int_values_array, int int_start, int int_length, float * float_values_array, int float_start, int float_length, HAPI_Bool string_evaluate, HAPI_StringHandle * string_values_array, int string_start, int string_length, HAPI_ParmChoiceInfo * choice_values_array, int choice_start, int choice_length, HAPI_Result& result);
    static bool GetAssetInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_AssetInfo * asset_info, HAPI_Result& result);
    static bool GetAttributeFloat64ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, double * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool GetAttributeFloat64Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, double * data_array, int start, int length, HAPI_Result& result);
    static bool GetAttributeFloatArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, float * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool GetAttributeFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, float * data_array, int start, int length, HAPI_Result& result);
    static bool GetAttributeInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeOwner owner, HAPI_AttributeInfo * attr_info, HAPI_Result& result);
    static bool GetAttributeInt16ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_Int16 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool GetAttributeInt16Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_Int16 * data_array, int start, int length, HAPI_Result& result);
    static bool GetAttributeInt64ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_Int64 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool GetAttributeInt64Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_Int64 * data_array, int start, int length, HAPI_Result& result);
    static bool GetAttributeInt8ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_Int8 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool GetAttributeInt8Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_Int8 * data_array, int start, int length, HAPI_Result& result);
    static bool GetAttributeIntArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool GetAttributeIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, int * data_array, int start, int length, HAPI_Result& result);
    static bool GetAttributeNames(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_AttributeOwner owner, HAPI_StringHandle * attribute_names_array, int count, HAPI_Result& result);
    static bool GetAttributeStringArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_StringHandle * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool GetAttributeStringData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_StringHandle * data_array, int start, int length, HAPI_Result& result);
    static bool GetAttributeUInt8ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_UInt8 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool GetAttributeUInt8Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_UInt8 * data_array, int start, int length, HAPI_Result& result);
    static bool GetAvailableAssetCount(const HAPI_Session * session, HAPI_AssetLibraryId library_id, int * asset_count, HAPI_Result& result);
    static bool GetAvailableAssets(const HAPI_Session * session, HAPI_AssetLibraryId library_id, HAPI_StringHandle * asset_names_array, int asset_count, HAPI_Result& result);
    static bool GetBoxInfo(const HAPI_Session * session, HAPI_NodeId geo_node_id, HAPI_PartId part_id, HAPI_BoxInfo * box_info, HAPI_Result& result);
    static bool GetCacheProperty(const HAPI_Session * session, const char * cache_name, HAPI_CacheProperty cache_property, int * property_value, HAPI_Result& result);
    static bool GetComposedChildNodeList(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_NodeId * child_node_ids_array, int count, HAPI_Result& result);
    static bool GetComposedNodeCookResult(const HAPI_Session * session, char * string_value, int length, HAPI_Result& result);
    static bool GetComposedObjectList(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_ObjectInfo * object_infos_array, int start, int length, HAPI_Result& result);
    static bool GetComposedObjectTransforms(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_RSTOrder rst_order, HAPI_Transform * transform_array, int start, int length, HAPI_Result& result);
    static bool GetCompositorOptions(const HAPI_Session * session, HAPI_CompositorOptions * compositor_options, HAPI_Result& result);
    static bool GetConnectionError(char * string_value, int length, HAPI_Bool clear, HAPI_Result& result);
    static bool GetConnectionErrorLength(int * buffer_length, HAPI_Result& result);
    static bool GetCookingCurrentCount(const HAPI_Session * session, int * count, HAPI_Result& result);
    static bool GetCookingTotalCount(const HAPI_Session * session, int * count, HAPI_Result& result);
    static bool GetCurveCounts(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * counts_array, int start, int length, HAPI_Result& result);
    static bool GetCurveInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_CurveInfo * info, HAPI_Result& result);
    static bool GetCurveKnots(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float * knots_array, int start, int length, HAPI_Result& result);
    static bool GetCurveOrders(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * orders_array, int start, int length, HAPI_Result& result);
    static bool GetDisplayGeoInfo(const HAPI_Session * session, HAPI_NodeId object_node_id, HAPI_GeoInfo * geo_info, HAPI_Result& result);
    static bool GetEdgeCountOfEdgeGroup(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * group_name, int * edge_count, HAPI_Result& result);
    static bool GetEnvInt(HAPI_EnvIntType int_type, int * value, HAPI_Result& result);
    static bool GetFaceCounts(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * face_counts_array, int start, int length, HAPI_Result& result);
    static bool GetFirstVolumeTile(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeTileInfo * tile, HAPI_Result& result);
    static bool GetGeometryInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_GeoInfo * geo_info, HAPI_Result& result);
    static bool GetGeoSize(const HAPI_Session * session, HAPI_NodeId node_id, const char * format, int * size, HAPI_Result& result);
    static bool GetGroupCountOnPackedInstancePart(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * pointGroupCount, int * primitiveGroupCount, HAPI_Result& result);
    static bool GetGroupMembership(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, HAPI_Bool * membership_array_all_equal, int * membership_array, int start, int length, HAPI_Result& result);
    static bool GetGroupMembershipOnPackedInstancePart(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, HAPI_Bool * membership_array_all_equal, int * membership_array, int start, int length, HAPI_Result& result);
    static bool GetGroupNames(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_GroupType group_type, HAPI_StringHandle * group_names_array, int group_count, HAPI_Result& result);
    static bool GetGroupNamesOnPackedInstancePart(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, HAPI_StringHandle * group_names_array, int group_count, HAPI_Result& result);
    static bool GetHIPFileNodeCount(const HAPI_Session * session, HAPI_HIPFileId id, int * count, HAPI_Result& result);
    static bool GetHIPFileNodeIds(const HAPI_Session * session, HAPI_HIPFileId id, HAPI_NodeId * node_ids, int length, HAPI_Result& result);
    static bool GetHandleBindingInfo(const HAPI_Session * session, HAPI_NodeId node_id, int handle_index, HAPI_HandleBindingInfo * handle_binding_infos_array, int start, int length, HAPI_Result& result);
    static bool GetHandleInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_HandleInfo * handle_infos_array, int start, int length, HAPI_Result& result);
    static bool GetHeightFieldData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float * values_array, int start, int length, HAPI_Result& result);
    static bool GetImageFilePath(const HAPI_Session * session, HAPI_NodeId material_node_id, const char * image_file_format_name, const char * image_planes, const char * destination_folder_path, const char * destination_file_name, HAPI_ParmId texture_parm_id, int * destination_file_path, HAPI_Result& result);
    static bool GetImageInfo(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_ImageInfo * image_info, HAPI_Result& result);
    static bool GetImageMemoryBuffer(const HAPI_Session * session, HAPI_NodeId material_node_id, char * buffer, int length, HAPI_Result& result);
    static bool GetImagePlaneCount(const HAPI_Session * session, HAPI_NodeId material_node_id, int * image_plane_count, HAPI_Result& result);
    static bool GetImagePlanes(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_StringHandle * image_planes_array, int image_plane_count, HAPI_Result& result);
    static bool GetInputCurveInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_InputCurveInfo * info, HAPI_Result& result);
    static bool GetInstanceTransformsOnPart(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_RSTOrder rst_order, HAPI_Transform * transforms_array, int start, int length, HAPI_Result& result);
    static bool GetInstancedObjectIds(const HAPI_Session * session, HAPI_NodeId object_node_id, HAPI_NodeId * instanced_node_id_array, int start, int length, HAPI_Result& result);
    static bool GetInstancedPartIds(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_PartId * instanced_parts_array, int start, int length, HAPI_Result& result);
    static bool GetInstancerPartTransforms(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_RSTOrder rst_order, HAPI_Transform * transforms_array, int start, int length, HAPI_Result& result);
    static bool GetManagerNodeId(const HAPI_Session * session, HAPI_NodeType node_type, HAPI_NodeId * node_id, HAPI_Result& result);
    static bool GetMaterialInfo(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_MaterialInfo * material_info, HAPI_Result& result);
    static bool GetMaterialNodeIdsOnFaces(const HAPI_Session * session, HAPI_NodeId geometry_node_id, HAPI_PartId part_id, HAPI_Bool * are_all_the_same, HAPI_NodeId * material_ids_array, int start, int length, HAPI_Result& result);
    static bool GetNextVolumeTile(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeTileInfo * tile, HAPI_Result& result);
    static bool GetNodeFromPath(const HAPI_Session * session, const HAPI_NodeId parent_node_id, const char * path, HAPI_NodeId * node_id, HAPI_Result& result);
    static bool GetNodeInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeInfo * node_info, HAPI_Result& result);
    static bool GetNodeInputName(const HAPI_Session * session, HAPI_NodeId node_id, int input_idx, HAPI_StringHandle * name, HAPI_Result& result);
    static bool GetNodeOutputName(const HAPI_Session * session, HAPI_NodeId node_id, int output_idx, HAPI_StringHandle * name, HAPI_Result& result);
    static bool GetNodePath(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeId relative_to_node_id, HAPI_StringHandle * path, HAPI_Result& result);
    static bool GetNumWorkItems(const HAPI_Session * session, HAPI_NodeId node_id, int * num, HAPI_Result& result);
    static bool GetNumWorkitems(const HAPI_Session * session, HAPI_NodeId node_id, int * num, HAPI_Result& result);
    static bool GetObjectInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ObjectInfo * object_info, HAPI_Result& result);
    static bool GetObjectTransform(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeId relative_to_node_id, HAPI_RSTOrder rst_order, HAPI_Transform * transform, HAPI_Result& result);
    static bool GetOutputGeoCount(const HAPI_Session* session, HAPI_NodeId node_id, int* count, HAPI_Result& result);
    static bool GetOutputGeoInfos(const HAPI_Session* session, HAPI_NodeId node_id, HAPI_GeoInfo* geo_infos_array, int count, HAPI_Result& result);
    static bool GetOutputNodeId(const HAPI_Session * session, HAPI_NodeId node_id, int output, HAPI_NodeId * output_node_id, HAPI_Result& result);
    static bool GetPDGEvents(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_EventInfo * event_array, int length, int * event_count, int * remaining_events, HAPI_Result& result);
    static bool GetPDGGraphContextId(const HAPI_Session * session, HAPI_NodeId top_node_id, HAPI_PDG_GraphContextId * context_id, HAPI_Result& result);
    static bool GetPDGGraphContexts(const HAPI_Session * session, HAPI_StringHandle * context_names_array, HAPI_PDG_GraphContextId * context_id_array, int start, int length, HAPI_Result& result);
    static bool GetPDGGraphContextsCount(const HAPI_Session* session, int* num_contexts, HAPI_Result& result);
    static bool GetPDGState(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, int * pdg_state, HAPI_Result& result);
    static bool GetParameters(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmInfo * parm_infos_array, int start, int length, HAPI_Result& result);
    static bool GetParmChoiceLists(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmChoiceInfo * parm_choices_array, int start, int length, HAPI_Result& result);
    static bool GetParmExpression(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_StringHandle * value, HAPI_Result& result);
    static bool GetParmFile(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, const char * destination_directory, const char * destination_file_name, HAPI_Result& result);
    static bool GetParmFloatValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, float * value, HAPI_Result& result);
    static bool GetParmFloatValues(const HAPI_Session * session, HAPI_NodeId node_id, float * values_array, int start, int length, HAPI_Result& result);
    static bool GetParmIdFromName(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_ParmId * parm_id, HAPI_Result& result);
    static bool GetParmInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, HAPI_ParmInfo * parm_info, HAPI_Result& result);
    static bool GetParmInfoFromName(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_ParmInfo * parm_info, HAPI_Result& result);
    static bool GetParmIntValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, int * value, HAPI_Result& result);
    static bool GetParmIntValues(const HAPI_Session * session, HAPI_NodeId node_id, int * values_array, int start, int length, HAPI_Result& result);
    static bool GetParmNodeValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_NodeId * value, HAPI_Result& result);
    static bool GetParmStringValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_Bool evaluate, HAPI_StringHandle * value, HAPI_Result& result);
    static bool GetParmStringValues(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Bool evaluate, HAPI_StringHandle * values_array, int start, int length, HAPI_Result& result);
    static bool GetParmTagName(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int tag_index, HAPI_StringHandle * tag_name, HAPI_Result& result);
    static bool GetParmTagValue(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, const char * tag_name, HAPI_StringHandle * tag_value, HAPI_Result& result);
    static bool GetParmWithTag(const HAPI_Session * session, HAPI_NodeId node_id, const char * tag_name, HAPI_ParmId * parm_id, HAPI_Result& result);
    static bool GetPartInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_PartInfo * part_info, HAPI_Result& result);
    static bool GetPreset(const HAPI_Session * session, HAPI_NodeId node_id, char * buffer, int buffer_length, HAPI_Result& result);
    static bool GetPresetBufLength(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PresetType preset_type, const char * preset_name, int * buffer_length, HAPI_Result& result);
    static bool GetServerEnvInt(const HAPI_Session * session, const char * variable_name, int * value, HAPI_Result& result);
    static bool GetServerEnvString(const HAPI_Session * session, const char * variable_name, HAPI_StringHandle * value, HAPI_Result& result);
    static bool GetServerEnvVarCount(const HAPI_Session * session, int * env_count, HAPI_Result& result);
    static bool GetServerEnvVarList(const HAPI_Session * session, HAPI_StringHandle * values_array, int start, int length, HAPI_Result& result);
    static bool GetSessionEnvInt(const HAPI_Session * session, HAPI_SessionEnvIntType int_type, int * value, HAPI_Result& result);
    static bool GetSessionSyncInfo(const HAPI_Session * session, HAPI_SessionSyncInfo * session_sync_info, HAPI_Result& result);
    static bool GetSphereInfo(const HAPI_Session * session, HAPI_NodeId geo_node_id, HAPI_PartId part_id, HAPI_SphereInfo * sphere_info, HAPI_Result& result);
    static bool GetStatus(const HAPI_Session * session, HAPI_StatusType status_type, int * status, HAPI_Result& result);
    static bool GetStatusString(const HAPI_Session * session, HAPI_StatusType status_type, char * string_value, int length, HAPI_Result& result);
    static bool GetStatusStringBufLength(const HAPI_Session * session, HAPI_StatusType status_type, HAPI_StatusVerbosity verbosity, int * buffer_length, HAPI_Result& result);
    static bool GetString(const HAPI_Session * session, HAPI_StringHandle string_handle, char * string_value, int length, HAPI_Result& result);
    static bool GetStringBatch(const HAPI_Session * session, char * char_buffer, int char_array_length, HAPI_Result& result);
    static bool GetStringBatchSize(const HAPI_Session * session, const int * string_handle_array, int string_handle_count, int * string_buffer_size, HAPI_Result& result);
    static bool GetStringBufLength(const HAPI_Session * session, HAPI_StringHandle string_handle, int * buffer_length, HAPI_Result& result);
    static bool GetSupportedImageFileFormatCount(const HAPI_Session * session, int * file_format_count, HAPI_Result& result);
    static bool GetSupportedImageFileFormats(const HAPI_Session * session, HAPI_ImageFileFormat * formats_array, int file_format_count, HAPI_Result& result);
    static bool GetTime(const HAPI_Session * session, float * time, HAPI_Result& result);
    static bool GetTimelineOptions(const HAPI_Session * session, HAPI_TimelineOptions * timeline_options, HAPI_Result& result);
    static bool GetTotalCookCount(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeTypeBits node_type_filter, HAPI_NodeFlagsBits node_flags_filter, HAPI_Bool recursive, int * count, HAPI_Result& result);
    static bool GetUseHoudiniTime(const HAPI_Session * session, HAPI_Bool * enabled, HAPI_Result& result);
    static bool GetVertexList(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * vertex_list_array, int start, int length, HAPI_Result& result);
    static bool GetViewport(const HAPI_Session * session, HAPI_Viewport * viewport, HAPI_Result& result);
    static bool GetVolumeBounds(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float * x_min, float * y_min, float * z_min, float * x_max, float * y_max, float * z_max, float * x_center, float * y_center, float * z_center, HAPI_Result& result);
    static bool GetVolumeInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeInfo * volume_info, HAPI_Result& result);
    static bool GetVolumeTileFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float fill_value, const HAPI_VolumeTileInfo * tile, float * values_array, int length, HAPI_Result& result);
    static bool GetVolumeTileIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int fill_value, const HAPI_VolumeTileInfo * tile, int * values_array, int length, HAPI_Result& result);
    static bool GetVolumeVisualInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeVisualInfo * visual_info, HAPI_Result& result);
    static bool GetVolumeVoxelFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, float * values_array, int value_count, HAPI_Result& result);
    static bool GetVolumeVoxelIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, int * values_array, int value_count, HAPI_Result& result);
    static bool GetWorkItemAttributeSize(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, int * length, HAPI_Result& result);
    static bool GetWorkItemFloatAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, float * data_array, int length, HAPI_Result& result);
    static bool GetWorkItemInfo(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_WorkItemId work_item_id, HAPI_PDG_WorkItemInfo * work_item_info, HAPI_Result& result);
    static bool GetWorkItemIntAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, int * data_array, int length, HAPI_Result& result);
    static bool GetWorkItemOutputFiles(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, HAPI_PDG_WorkItemOutputFile * resultinfo_array, int resultinfo_count, HAPI_Result& result);
    static bool GetWorkItemStringAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, HAPI_StringHandle * data_array, int length, HAPI_Result& result);
    static bool GetWorkItems(const HAPI_Session * session, HAPI_NodeId node_id, int * work_item_ids_array, int length, HAPI_Result& result);
    static bool GetWorkitemDataLength(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, int * length, HAPI_Result& result);
    static bool GetWorkitemFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, float * data_array, int length, HAPI_Result& result);
    static bool GetWorkitemInfo(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_WorkItemId workitem_id, HAPI_PDG_WorkItemInfo * workitem_info, HAPI_Result& result);
    static bool GetWorkitemIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, int * data_array, int length, HAPI_Result& result);
    static bool GetWorkitemResultInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, HAPI_PDG_WorkItemOutputFile * resultinfo_array, int resultinfo_count, HAPI_Result& result);
    static bool GetWorkitemStringData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, HAPI_StringHandle * data_array, int length, HAPI_Result& result);
    static bool GetWorkitems(const HAPI_Session * session, HAPI_NodeId node_id, int * workitem_ids_array, int length, HAPI_Result& result);
    static bool Initialize(const HAPI_Session * session, const HAPI_CookOptions * cook_options, HAPI_Bool use_cooking_thread, int cooking_thread_stack_size, const char * houdini_environment_files, const char * otl_search_path, const char * dso_search_path, const char * image_dso_search_path, const char * audio_dso_search_path, HAPI_Result& result);
    static bool InsertMultiparmInstance(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int instance_position, HAPI_Result& result);
    static bool Interrupt(const HAPI_Session * session, HAPI_Result& result);
    static bool IsInitialized(const HAPI_Session * session, HAPI_Result& result);
    static bool IsNodeValid(const HAPI_Session * session, HAPI_NodeId node_id, int unique_node_id, HAPI_Bool * answer, HAPI_Result& result);
    static bool IsSessionValid(const HAPI_Session * session, HAPI_Result& result);
    static bool LoadAssetLibraryFromFile(const HAPI_Session * session, const char * file_path, HAPI_Bool allow_overwrite, HAPI_AssetLibraryId * library_id, HAPI_Result& result);
    static bool LoadAssetLibraryFromMemory(const HAPI_Session * session, const char * library_buffer, int library_buffer_length, HAPI_Bool allow_overwrite, HAPI_AssetLibraryId * library_id, HAPI_Result& result);
    static bool LoadGeoFromFile(const HAPI_Session * session, HAPI_NodeId node_id, const char * file_name, HAPI_Result& result);
    static bool LoadGeoFromMemory(const HAPI_Session * session, HAPI_NodeId node_id, const char * format, const char * buffer, int length, HAPI_Result& result);
    static bool LoadHIPFile(const HAPI_Session * session, const char * file_name, HAPI_Bool cook_on_load, HAPI_Result& result);
    static bool LoadNodeFromFile(const HAPI_Session * session, const char * file_name, HAPI_NodeId parent_node_id, const char * node_label, HAPI_Bool cook_on_load, HAPI_NodeId * new_node_id, HAPI_Result& result);
    static bool MergeHIPFile(const HAPI_Session * session, const char * file_name, HAPI_Bool cook_on_load, HAPI_HIPFileId * file_id, HAPI_Result& result);
    static bool ParmHasExpression(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_Bool * has_expression, HAPI_Result& result);
    static bool ParmHasTag(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, const char * tag_name, HAPI_Bool * has_tag, HAPI_Result& result);
    static bool PausePDGCook(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_Result& result);
    static bool PythonThreadInterpreterLock(const HAPI_Session * session, HAPI_Bool locked, HAPI_Result& result);
    static bool QueryNodeInput(const HAPI_Session * session, HAPI_NodeId node_to_query, int input_index, HAPI_NodeId * connected_node_id, HAPI_Result& result);
    static bool QueryNodeOutputConnectedCount(const HAPI_Session * session, HAPI_NodeId node_id, int output_idx, HAPI_Bool into_subnets, HAPI_Bool through_dots, int * connected_count, HAPI_Result& result);
    static bool QueryNodeOutputConnectedNodes(const HAPI_Session * session, HAPI_NodeId node_id, int output_idx, HAPI_Bool into_subnets, HAPI_Bool through_dots, HAPI_NodeId * connected_node_ids_array, int start, int length, HAPI_Result& result);
    static bool RemoveCustomString(const HAPI_Session * session, const HAPI_StringHandle string_handle, HAPI_Result& result);
    static bool RemoveMultiparmInstance(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int instance_position, HAPI_Result& result);
    static bool RemoveParmExpression(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int index, HAPI_Result& result);
    static bool RenameNode(const HAPI_Session * session, HAPI_NodeId node_id, const char * new_name, HAPI_Result& result);
    static bool RenderCOP2ToImage(const HAPI_Session * session, HAPI_NodeId cop_node_id, HAPI_Result& result);
    static bool RenderTextureToImage(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_ParmId parm_id, HAPI_Result& result);
    static bool ResetSimulation(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Result& result);
    static bool RevertGeo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Result& result);
    static bool RevertParmToDefault(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_Result& result);
    static bool RevertParmToDefaults(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_Result& result);
    static bool SaveGeoToFile(const HAPI_Session * session, HAPI_NodeId node_id, const char * file_name, HAPI_Result& result);
    static bool SaveGeoToMemory(const HAPI_Session * session, HAPI_NodeId node_id, char * buffer, int length, HAPI_Result& result);
    static bool SaveHIPFile(const HAPI_Session * session, const char * file_path, HAPI_Bool lock_nodes, HAPI_Result& result);
    static bool SaveNodeToFile(const HAPI_Session * session, HAPI_NodeId node_id, const char * file_name, HAPI_Result& result);
    static bool SetAnimCurve(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int parm_index, const HAPI_Keyframe * curve_keyframes_array, int keyframe_count, HAPI_Result& result);
    static bool SetAttributeFloat64ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const double * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool SetAttributeFloat64Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const double * data_array, int start, int length, HAPI_Result& result);
    static bool SetAttributeFloatArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const float * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool SetAttributeFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const float * data_array, int start, int length, HAPI_Result& result);
    static bool SetAttributeInt16ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int16 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool SetAttributeInt16Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int16 * data_array, int start, int length, HAPI_Result& result);
    static bool SetAttributeInt64ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int64 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool SetAttributeInt64Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int64 * data_array, int start, int length, HAPI_Result& result);
    static bool SetAttributeInt8ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int8 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool SetAttributeInt8Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int8 * data_array, int start, int length, HAPI_Result& result);
    static bool SetAttributeIntArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const int * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool SetAttributeIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const int * data_array, int start, int length, HAPI_Result& result);
    static bool SetAttributeStringArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const char ** data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool SetAttributeStringData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const char ** data_array, int start, int length, HAPI_Result& result);
    static bool SetAttributeUInt8ArrayData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_UInt8 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length, HAPI_Result& result);
    static bool SetAttributeUInt8Data(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_UInt8 * data_array, int start, int length, HAPI_Result& result);
    static bool SetCacheProperty(const HAPI_Session * session, const char * cache_name, HAPI_CacheProperty cache_property, int property_value, HAPI_Result& result);
    static bool SetCompositorOptions(const HAPI_Session * session, const HAPI_CompositorOptions * compositor_options, HAPI_Result& result);
    static bool SetCurveCounts(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * counts_array, int start, int length, HAPI_Result& result);
    static bool SetCurveInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_CurveInfo * info, HAPI_Result& result);
    static bool SetCurveKnots(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const float * knots_array, int start, int length, HAPI_Result& result);
    static bool SetCurveOrders(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * orders_array, int start, int length, HAPI_Result& result);
    static bool SetCustomString(const HAPI_Session * session, const char * string_value, HAPI_StringHandle * handle_value, HAPI_Result& result);
    static bool SetFaceCounts(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * face_counts_array, int start, int length, HAPI_Result& result);
    static bool SetGroupMembership(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, const int * membership_array, int start, int length, HAPI_Result& result);
    static bool SetHeightFieldData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const float * values_array, int start, int length, HAPI_Result& result);
    static bool SetImageInfo(const HAPI_Session * session, HAPI_NodeId material_node_id, const HAPI_ImageInfo * image_info, HAPI_Result& result);
    static bool SetInputCurveInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_InputCurveInfo * info, HAPI_Result& result);
    static bool SetInputCurvePositions(const HAPI_Session* session, HAPI_NodeId node_id, HAPI_PartId part_id, const float* positions_array, int start, int length, HAPI_Result& result);
    static bool SetInputCurvePositionsRotationsScales(const HAPI_Session* session, HAPI_NodeId node_id, HAPI_PartId part_id, const float* positions_array, int positions_start, int positions_length, const float* rotations_array, int rotations_start, int rotations_length, const float * scales_array, int scales_start, int scales_length, HAPI_Result& result);
    static bool SetNodeDisplay(const HAPI_Session * session, HAPI_NodeId node_id, int onOff, HAPI_Result& result);
    static bool SetObjectTransform(const HAPI_Session * session, HAPI_NodeId node_id, const HAPI_TransformEuler * trans, HAPI_Result& result);
    static bool SetParmExpression(const HAPI_Session * session, HAPI_NodeId node_id, const char * value, HAPI_ParmId parm_id, int index, HAPI_Result& result);
    static bool SetParmFloatValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, float value, HAPI_Result& result);
    static bool SetParmFloatValues(const HAPI_Session * session, HAPI_NodeId node_id, const float * values_array, int start, int length, HAPI_Result& result);
    static bool SetParmIntValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, int value, HAPI_Result& result);
    static bool SetParmIntValues(const HAPI_Session * session, HAPI_NodeId node_id, const int * values_array, int start, int length, HAPI_Result& result);
    static bool SetParmNodeValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_NodeId value, HAPI_Result& result);
    static bool SetParmStringValue(const HAPI_Session * session, HAPI_NodeId node_id, const char * value, HAPI_ParmId parm_id, int index, HAPI_Result& result);
    static bool SetPartInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_PartInfo * part_info, HAPI_Result& result);
    static bool SetPreset(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PresetType preset_type, const char * preset_name, const char * buffer, int buffer_length, HAPI_Result& result);
    static bool SetServerEnvInt(const HAPI_Session * session, const char * variable_name, int value, HAPI_Result& result);
    static bool SetServerEnvString(const HAPI_Session * session, const char * variable_name, const char * value, HAPI_Result& result);
    static bool SetSessionSync(const HAPI_Session * session, HAPI_Bool enable, HAPI_Result& result);
    static bool SetSessionSyncInfo(const HAPI_Session * session, const HAPI_SessionSyncInfo * session_sync_info, HAPI_Result& result);
    static bool SetTime(const HAPI_Session * session, float time, HAPI_Result& result);
    static bool SetTimelineOptions(const HAPI_Session * session, const HAPI_TimelineOptions * timeline_options, HAPI_Result& result);
    static bool SetTransformAnimCurve(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_TransformComponent trans_comp, const HAPI_Keyframe * curve_keyframes_array, int keyframe_count, HAPI_Result& result);
    static bool SetUseHoudiniTime(const HAPI_Session * session, HAPI_Bool enabled, HAPI_Result& result);
    static bool SetVertexList(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * vertex_list_array, int start, int length, HAPI_Result& result);
    static bool SetViewport(const HAPI_Session * session, const HAPI_Viewport * viewport, HAPI_Result& result);
    static bool SetVolumeInfo(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeInfo * volume_info, HAPI_Result& result);
    static bool SetVolumeTileFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeTileInfo * tile, const float * values_array, int length, HAPI_Result& result);
    static bool SetVolumeTileIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeTileInfo * tile, const int * values_array, int length, HAPI_Result& result);
    static bool SetVolumeVoxelFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, const float * values_array, int value_count, HAPI_Result& result);
    static bool SetVolumeVoxelIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, const int * values_array, int value_count, HAPI_Result& result);
    static bool SetWorkItemFloatAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, const float * values_array, int length, HAPI_Result& result);
    static bool SetWorkItemIntAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, const int * values_array, int length, HAPI_Result& result);
    static bool SetWorkItemStringAttribute(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, int data_index, const char * value, HAPI_Result& result);
    static bool SetWorkitemFloatData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, const float * values_array, int length, HAPI_Result& result);
    static bool SetWorkitemIntData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, const int * values_array, int length, HAPI_Result& result);
    static bool SetWorkitemStringData(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, int data_index, const char * value, HAPI_Result& result);
    static bool Shutdown(const HAPI_Session * session, HAPI_Result& result);
    static bool StartThriftNamedPipeServer(const HAPI_ThriftServerOptions * options, const char * pipe_name, HAPI_ProcessId * process_id, const char * log_file, HAPI_Result& result);
    static bool StartThriftSocketServer(const HAPI_ThriftServerOptions * options, int port, HAPI_ProcessId * process_id, const char * log_file, HAPI_Result& result);

public:

    static AddAttributeFuncPtr AddAttributeImpl;
    static AddGroupFuncPtr AddGroupImpl;
    static BindCustomImplementationFuncPtr BindCustomImplementationImpl;
    static CancelPDGCookFuncPtr CancelPDGCookImpl;
    static CheckForSpecificErrorsFuncPtr CheckForSpecificErrorsImpl;
    static CleanupFuncPtr CleanupImpl;
    static ClearConnectionErrorFuncPtr ClearConnectionErrorImpl;
    static CloseSessionFuncPtr CloseSessionImpl;
    static CommitGeoFuncPtr CommitGeoImpl;
    static CommitWorkItemsFuncPtr CommitWorkItemsImpl;
    static CommitWorkitemsFuncPtr CommitWorkitemsImpl;
    static ComposeChildNodeListFuncPtr ComposeChildNodeListImpl;
    static ComposeNodeCookResultFuncPtr ComposeNodeCookResultImpl;
    static ComposeObjectListFuncPtr ComposeObjectListImpl;
    static ConnectNodeInputFuncPtr ConnectNodeInputImpl;
    static ConvertMatrixToEulerFuncPtr ConvertMatrixToEulerImpl;
    static ConvertMatrixToQuatFuncPtr ConvertMatrixToQuatImpl;
    static ConvertTransformFuncPtr ConvertTransformImpl;
    static ConvertTransformEulerToMatrixFuncPtr ConvertTransformEulerToMatrixImpl;
    static ConvertTransformQuatToMatrixFuncPtr ConvertTransformQuatToMatrixImpl;
    static CookNodeFuncPtr CookNodeImpl;
    static CookPDGFuncPtr CookPDGImpl;
    static CookPDGAllOutputsFuncPtr CookPDGAllOutputsImpl;
    static CreateCustomSessionFuncPtr CreateCustomSessionImpl;
    static CreateHeightFieldInputFuncPtr CreateHeightFieldInputImpl;
    static CreateHeightfieldInputVolumeNodeFuncPtr CreateHeightfieldInputVolumeNodeImpl;
    static CreateInProcessSessionFuncPtr CreateInProcessSessionImpl;
    static CreateInputCurveNodeFuncPtr CreateInputCurveNodeImpl;
    static CreateInputNodeFuncPtr CreateInputNodeImpl;
    static CreateNodeFuncPtr CreateNodeImpl;
    static CreateThriftNamedPipeSessionFuncPtr CreateThriftNamedPipeSessionImpl;
    static CreateThriftSocketSessionFuncPtr CreateThriftSocketSessionImpl;
    static CreateWorkItemFuncPtr CreateWorkItemImpl;
    static CreateWorkitemFuncPtr CreateWorkitemImpl;
    static DeleteAttributeFuncPtr DeleteAttributeImpl;
    static DeleteGroupFuncPtr DeleteGroupImpl;
    static DeleteNodeFuncPtr DeleteNodeImpl;
    static DirtyPDGNodeFuncPtr DirtyPDGNodeImpl;
    static DisconnectNodeInputFuncPtr DisconnectNodeInputImpl;
    static DisconnectNodeOutputsAtFuncPtr DisconnectNodeOutputsAtImpl;
    static ExtractImageToFileFuncPtr ExtractImageToFileImpl;
    static ExtractImageToMemoryFuncPtr ExtractImageToMemoryImpl;
    static GetActiveCacheCountFuncPtr GetActiveCacheCountImpl;
    static GetActiveCacheNamesFuncPtr GetActiveCacheNamesImpl;
    static GetAssetDefinitionParmCountsFuncPtr GetAssetDefinitionParmCountsImpl;
    static GetAssetDefinitionParmInfosFuncPtr GetAssetDefinitionParmInfosImpl;
    static GetAssetDefinitionParmValuesFuncPtr GetAssetDefinitionParmValuesImpl;
    static GetAssetInfoFuncPtr GetAssetInfoImpl;
    static GetAttributeFloat64ArrayDataFuncPtr GetAttributeFloat64ArrayDataImpl;
    static GetAttributeFloat64DataFuncPtr GetAttributeFloat64DataImpl;
    static GetAttributeFloatArrayDataFuncPtr GetAttributeFloatArrayDataImpl;
    static GetAttributeFloatDataFuncPtr GetAttributeFloatDataImpl;
    static GetAttributeInfoFuncPtr GetAttributeInfoImpl;
    static GetAttributeInt16ArrayDataFuncPtr GetAttributeInt16ArrayDataImpl;
    static GetAttributeInt16DataFuncPtr GetAttributeInt16DataImpl;
    static GetAttributeInt64ArrayDataFuncPtr GetAttributeInt64ArrayDataImpl;
    static GetAttributeInt64DataFuncPtr GetAttributeInt64DataImpl;
    static GetAttributeInt8ArrayDataFuncPtr GetAttributeInt8ArrayDataImpl;
    static GetAttributeInt8DataFuncPtr GetAttributeInt8DataImpl;
    static GetAttributeIntArrayDataFuncPtr GetAttributeIntArrayDataImpl;
    static GetAttributeIntDataFuncPtr GetAttributeIntDataImpl;
    static GetAttributeNamesFuncPtr GetAttributeNamesImpl;
    static GetAttributeStringArrayDataFuncPtr GetAttributeStringArrayDataImpl;
    static GetAttributeStringDataFuncPtr GetAttributeStringDataImpl;
    static GetAttributeUInt8ArrayDataFuncPtr GetAttributeUInt8ArrayDataImpl;
    static GetAttributeUInt8DataFuncPtr GetAttributeUInt8DataImpl;
    static GetAvailableAssetCountFuncPtr GetAvailableAssetCountImpl;
    static GetAvailableAssetsFuncPtr GetAvailableAssetsImpl;
    static GetBoxInfoFuncPtr GetBoxInfoImpl;
    static GetCachePropertyFuncPtr GetCachePropertyImpl;
    static GetComposedChildNodeListFuncPtr GetComposedChildNodeListImpl;
    static GetComposedNodeCookResultFuncPtr GetComposedNodeCookResultImpl;
    static GetComposedObjectListFuncPtr GetComposedObjectListImpl;
    static GetComposedObjectTransformsFuncPtr GetComposedObjectTransformsImpl;
    static GetCompositorOptionsFuncPtr GetCompositorOptionsImpl;
    static GetConnectionErrorFuncPtr GetConnectionErrorImpl;
    static GetConnectionErrorLengthFuncPtr GetConnectionErrorLengthImpl;
    static GetCookingCurrentCountFuncPtr GetCookingCurrentCountImpl;
    static GetCookingTotalCountFuncPtr GetCookingTotalCountImpl;
    static GetCurveCountsFuncPtr GetCurveCountsImpl;
    static GetCurveInfoFuncPtr GetCurveInfoImpl;
    static GetCurveKnotsFuncPtr GetCurveKnotsImpl;
    static GetCurveOrdersFuncPtr GetCurveOrdersImpl;
    static GetDisplayGeoInfoFuncPtr GetDisplayGeoInfoImpl;
    static GetEdgeCountOfEdgeGroupFuncPtr GetEdgeCountOfEdgeGroupImpl;
    static GetEnvIntFuncPtr GetEnvIntImpl;
    static GetFaceCountsFuncPtr GetFaceCountsImpl;
    static GetFirstVolumeTileFuncPtr GetFirstVolumeTileImpl;
    static GetGeometryInfoFuncPtr GetGeometryInfoImpl;
    static GetGeoSizeFuncPtr GetGeoSizeImpl;
    static GetGroupCountOnPackedInstancePartFuncPtr GetGroupCountOnPackedInstancePartImpl;
    static GetGroupMembershipFuncPtr GetGroupMembershipImpl;
    static GetGroupMembershipOnPackedInstancePartFuncPtr GetGroupMembershipOnPackedInstancePartImpl;
    static GetGroupNamesFuncPtr GetGroupNamesImpl;
    static GetGroupNamesOnPackedInstancePartFuncPtr GetGroupNamesOnPackedInstancePartImpl;
    static GetHIPFileNodeCountFuncPtr GetHIPFileNodeCountImpl;
    static GetHIPFileNodeIdsFuncPtr GetHIPFileNodeIdsImpl;
    static GetHandleBindingInfoFuncPtr GetHandleBindingInfoImpl;
    static GetHandleInfoFuncPtr GetHandleInfoImpl;
    static GetHeightFieldDataFuncPtr GetHeightFieldDataImpl;
    static GetImageFilePathFuncPtr GetImageFilePathImpl;
    static GetImageInfoFuncPtr GetImageInfoImpl;
    static GetImageMemoryBufferFuncPtr GetImageMemoryBufferImpl;
    static GetImagePlaneCountFuncPtr GetImagePlaneCountImpl;
    static GetImagePlanesFuncPtr GetImagePlanesImpl;
    static GetInputCurveInfoFuncPtr GetInputCurveInfoImpl;
    static GetInstanceTransformsOnPartFuncPtr GetInstanceTransformsOnPartImpl;
    static GetInstancedObjectIdsFuncPtr GetInstancedObjectIdsImpl;
    static GetInstancedPartIdsFuncPtr GetInstancedPartIdsImpl;
    static GetInstancerPartTransformsFuncPtr GetInstancerPartTransformsImpl;
    static GetManagerNodeIdFuncPtr GetManagerNodeIdImpl;
    static GetMaterialInfoFuncPtr GetMaterialInfoImpl;
    static GetMaterialNodeIdsOnFacesFuncPtr GetMaterialNodeIdsOnFacesImpl;
    static GetNextVolumeTileFuncPtr GetNextVolumeTileImpl;
    static GetNodeFromPathFuncPtr GetNodeFromPathImpl;
    static GetNodeInfoFuncPtr GetNodeInfoImpl;
    static GetNodeInputNameFuncPtr GetNodeInputNameImpl;
    static GetNodeOutputNameFuncPtr GetNodeOutputNameImpl;
    static GetNodePathFuncPtr GetNodePathImpl;
    static GetNumWorkItemsFuncPtr GetNumWorkItemsImpl;
    static GetNumWorkitemsFuncPtr GetNumWorkitemsImpl;
    static GetObjectInfoFuncPtr GetObjectInfoImpl;
    static GetObjectTransformFuncPtr GetObjectTransformImpl;
    static GetOutputGeoCountFuncPtr GetOutputGeoCountImpl;
    static GetOutputGeoInfosFuncPtr GetOutputGeoInfosImpl;
    static GetOutputNodeIdFuncPtr GetOutputNodeIdImpl;
    static GetPDGEventsFuncPtr GetPDGEventsImpl;
    static GetPDGGraphContextIdFuncPtr GetPDGGraphContextIdImpl;
    static GetPDGGraphContextsFuncPtr GetPDGGraphContextsImpl;
    static GetPDGGraphContextsCountFuncPtr GetPDGGraphContextsCountImpl;
    static GetPDGStateFuncPtr GetPDGStateImpl;
    static GetParametersFuncPtr GetParametersImpl;
    static GetParmChoiceListsFuncPtr GetParmChoiceListsImpl;
    static GetParmExpressionFuncPtr GetParmExpressionImpl;
    static GetParmFileFuncPtr GetParmFileImpl;
    static GetParmFloatValueFuncPtr GetParmFloatValueImpl;
    static GetParmFloatValuesFuncPtr GetParmFloatValuesImpl;
    static GetParmIdFromNameFuncPtr GetParmIdFromNameImpl;
    static GetParmInfoFuncPtr GetParmInfoImpl;
    static GetParmInfoFromNameFuncPtr GetParmInfoFromNameImpl;
    static GetParmIntValueFuncPtr GetParmIntValueImpl;
    static GetParmIntValuesFuncPtr GetParmIntValuesImpl;
    static GetParmNodeValueFuncPtr GetParmNodeValueImpl;
    static GetParmStringValueFuncPtr GetParmStringValueImpl;
    static GetParmStringValuesFuncPtr GetParmStringValuesImpl;
    static GetParmTagNameFuncPtr GetParmTagNameImpl;
    static GetParmTagValueFuncPtr GetParmTagValueImpl;
    static GetParmWithTagFuncPtr GetParmWithTagImpl;
    static GetPartInfoFuncPtr GetPartInfoImpl;
    static GetPresetFuncPtr GetPresetImpl;
    static GetPresetBufLengthFuncPtr GetPresetBufLengthImpl;
    static GetServerEnvIntFuncPtr GetServerEnvIntImpl;
    static GetServerEnvStringFuncPtr GetServerEnvStringImpl;
    static GetServerEnvVarCountFuncPtr GetServerEnvVarCountImpl;
    static GetServerEnvVarListFuncPtr GetServerEnvVarListImpl;
    static GetSessionEnvIntFuncPtr GetSessionEnvIntImpl;
    static GetSessionSyncInfoFuncPtr GetSessionSyncInfoImpl;
    static GetSphereInfoFuncPtr GetSphereInfoImpl;
    static GetStatusFuncPtr GetStatusImpl;
    static GetStatusStringFuncPtr GetStatusStringImpl;
    static GetStatusStringBufLengthFuncPtr GetStatusStringBufLengthImpl;
    static GetStringFuncPtr GetStringImpl;
    static GetStringBatchFuncPtr GetStringBatchImpl;
    static GetStringBatchSizeFuncPtr GetStringBatchSizeImpl;
    static GetStringBufLengthFuncPtr GetStringBufLengthImpl;
    static GetSupportedImageFileFormatCountFuncPtr GetSupportedImageFileFormatCountImpl;
    static GetSupportedImageFileFormatsFuncPtr GetSupportedImageFileFormatsImpl;
    static GetTimeFuncPtr GetTimeImpl;
    static GetTimelineOptionsFuncPtr GetTimelineOptionsImpl;
    static GetTotalCookCountFuncPtr GetTotalCookCountImpl;
    static GetUseHoudiniTimeFuncPtr GetUseHoudiniTimeImpl;
    static GetVertexListFuncPtr GetVertexListImpl;
    static GetViewportFuncPtr GetViewportImpl;
    static GetVolumeBoundsFuncPtr GetVolumeBoundsImpl;
    static GetVolumeInfoFuncPtr GetVolumeInfoImpl;
    static GetVolumeTileFloatDataFuncPtr GetVolumeTileFloatDataImpl;
    static GetVolumeTileIntDataFuncPtr GetVolumeTileIntDataImpl;
    static GetVolumeVisualInfoFuncPtr GetVolumeVisualInfoImpl;
    static GetVolumeVoxelFloatDataFuncPtr GetVolumeVoxelFloatDataImpl;
    static GetVolumeVoxelIntDataFuncPtr GetVolumeVoxelIntDataImpl;
    static GetWorkItemAttributeSizeFuncPtr GetWorkItemAttributeSizeImpl;
    static GetWorkItemFloatAttributeFuncPtr GetWorkItemFloatAttributeImpl;
    static GetWorkItemInfoFuncPtr GetWorkItemInfoImpl;
    static GetWorkItemIntAttributeFuncPtr GetWorkItemIntAttributeImpl;
    static GetWorkItemOutputFilesFuncPtr GetWorkItemOutputFilesImpl;
    static GetWorkItemStringAttributeFuncPtr GetWorkItemStringAttributeImpl;
    static GetWorkItemsFuncPtr GetWorkItemsImpl;
    static GetWorkitemDataLengthFuncPtr GetWorkitemDataLengthImpl;
    static GetWorkitemFloatDataFuncPtr GetWorkitemFloatDataImpl;
    static GetWorkitemInfoFuncPtr GetWorkitemInfoImpl;
    static GetWorkitemIntDataFuncPtr GetWorkitemIntDataImpl;
    static GetWorkitemResultInfoFuncPtr GetWorkitemResultInfoImpl;
    static GetWorkitemStringDataFuncPtr GetWorkitemStringDataImpl;
    static GetWorkitemsFuncPtr GetWorkitemsImpl;
    static InitializeFuncPtr InitializeImpl;
    static InsertMultiparmInstanceFuncPtr InsertMultiparmInstanceImpl;
    static InterruptFuncPtr InterruptImpl;
    static IsInitializedFuncPtr IsInitializedImpl;
    static IsNodeValidFuncPtr IsNodeValidImpl;
    static IsSessionValidFuncPtr IsSessionValidImpl;
    static LoadAssetLibraryFromFileFuncPtr LoadAssetLibraryFromFileImpl;
    static LoadAssetLibraryFromMemoryFuncPtr LoadAssetLibraryFromMemoryImpl;
    static LoadGeoFromFileFuncPtr LoadGeoFromFileImpl;
    static LoadGeoFromMemoryFuncPtr LoadGeoFromMemoryImpl;
    static LoadHIPFileFuncPtr LoadHIPFileImpl;
    static LoadNodeFromFileFuncPtr LoadNodeFromFileImpl;
    static MergeHIPFileFuncPtr MergeHIPFileImpl;
    static ParmHasExpressionFuncPtr ParmHasExpressionImpl;
    static ParmHasTagFuncPtr ParmHasTagImpl;
    static PausePDGCookFuncPtr PausePDGCookImpl;
    static PythonThreadInterpreterLockFuncPtr PythonThreadInterpreterLockImpl;
    static QueryNodeInputFuncPtr QueryNodeInputImpl;
    static QueryNodeOutputConnectedCountFuncPtr QueryNodeOutputConnectedCountImpl;
    static QueryNodeOutputConnectedNodesFuncPtr QueryNodeOutputConnectedNodesImpl;
    static RemoveCustomStringFuncPtr RemoveCustomStringImpl;
    static RemoveMultiparmInstanceFuncPtr RemoveMultiparmInstanceImpl;
    static RemoveParmExpressionFuncPtr RemoveParmExpressionImpl;
    static RenameNodeFuncPtr RenameNodeImpl;
    static RenderCOP2ToImageFuncPtr RenderCOP2ToImageImpl;
    static RenderTextureToImageFuncPtr RenderTextureToImageImpl;
    static ResetSimulationFuncPtr ResetSimulationImpl;
    static RevertGeoFuncPtr RevertGeoImpl;
    static RevertParmToDefaultFuncPtr RevertParmToDefaultImpl;
    static RevertParmToDefaultsFuncPtr RevertParmToDefaultsImpl;
    static SaveGeoToFileFuncPtr SaveGeoToFileImpl;
    static SaveGeoToMemoryFuncPtr SaveGeoToMemoryImpl;
    static SaveHIPFileFuncPtr SaveHIPFileImpl;
    static SaveNodeToFileFuncPtr SaveNodeToFileImpl;
    static SetAnimCurveFuncPtr SetAnimCurveImpl;
    static SetAttributeFloat64ArrayDataFuncPtr SetAttributeFloat64ArrayDataImpl;
    static SetAttributeFloat64DataFuncPtr SetAttributeFloat64DataImpl;
    static SetAttributeFloatArrayDataFuncPtr SetAttributeFloatArrayDataImpl;
    static SetAttributeFloatDataFuncPtr SetAttributeFloatDataImpl;
    static SetAttributeInt16ArrayDataFuncPtr SetAttributeInt16ArrayDataImpl;
    static SetAttributeInt16DataFuncPtr SetAttributeInt16DataImpl;
    static SetAttributeInt64ArrayDataFuncPtr SetAttributeInt64ArrayDataImpl;
    static SetAttributeInt64DataFuncPtr SetAttributeInt64DataImpl;
    static SetAttributeInt8ArrayDataFuncPtr SetAttributeInt8ArrayDataImpl;
    static SetAttributeInt8DataFuncPtr SetAttributeInt8DataImpl;
    static SetAttributeIntArrayDataFuncPtr SetAttributeIntArrayDataImpl;
    static SetAttributeIntDataFuncPtr SetAttributeIntDataImpl;
    static SetAttributeStringArrayDataFuncPtr SetAttributeStringArrayDataImpl;
    static SetAttributeStringDataFuncPtr SetAttributeStringDataImpl;
    static SetAttributeUInt8ArrayDataFuncPtr SetAttributeUInt8ArrayDataImpl;
    static SetAttributeUInt8DataFuncPtr SetAttributeUInt8DataImpl;
    static SetCachePropertyFuncPtr SetCachePropertyImpl;
    static SetCompositorOptionsFuncPtr SetCompositorOptionsImpl;
    static SetCurveCountsFuncPtr SetCurveCountsImpl;
    static SetCurveInfoFuncPtr SetCurveInfoImpl;
    static SetCurveKnotsFuncPtr SetCurveKnotsImpl;
    static SetCurveOrdersFuncPtr SetCurveOrdersImpl;
    static SetCustomStringFuncPtr SetCustomStringImpl;
    static SetFaceCountsFuncPtr SetFaceCountsImpl;
    static SetGroupMembershipFuncPtr SetGroupMembershipImpl;
    static SetHeightFieldDataFuncPtr SetHeightFieldDataImpl;
    static SetImageInfoFuncPtr SetImageInfoImpl;
    static SetInputCurveInfoFuncPtr SetInputCurveInfoImpl;
    static SetInputCurvePositionsFuncPtr SetInputCurvePositionsImpl;
    static SetInputCurvePositionsRotationsScalesFuncPtr SetInputCurvePositionsRotationsScalesImpl;
    static SetNodeDisplayFuncPtr SetNodeDisplayImpl;
    static SetObjectTransformFuncPtr SetObjectTransformImpl;
    static SetParmExpressionFuncPtr SetParmExpressionImpl;
    static SetParmFloatValueFuncPtr SetParmFloatValueImpl;
    static SetParmFloatValuesFuncPtr SetParmFloatValuesImpl;
    static SetParmIntValueFuncPtr SetParmIntValueImpl;
    static SetParmIntValuesFuncPtr SetParmIntValuesImpl;
    static SetParmNodeValueFuncPtr SetParmNodeValueImpl;
    static SetParmStringValueFuncPtr SetParmStringValueImpl;
    static SetPartInfoFuncPtr SetPartInfoImpl;
    static SetPresetFuncPtr SetPresetImpl;
    static SetServerEnvIntFuncPtr SetServerEnvIntImpl;
    static SetServerEnvStringFuncPtr SetServerEnvStringImpl;
    static SetSessionSyncFuncPtr SetSessionSyncImpl;
    static SetSessionSyncInfoFuncPtr SetSessionSyncInfoImpl;
    static SetTimeFuncPtr SetTimeImpl;
    static SetTimelineOptionsFuncPtr SetTimelineOptionsImpl;
    static SetTransformAnimCurveFuncPtr SetTransformAnimCurveImpl;
    static SetUseHoudiniTimeFuncPtr SetUseHoudiniTimeImpl;
    static SetVertexListFuncPtr SetVertexListImpl;
    static SetViewportFuncPtr SetViewportImpl;
    static SetVolumeInfoFuncPtr SetVolumeInfoImpl;
    static SetVolumeTileFloatDataFuncPtr SetVolumeTileFloatDataImpl;
    static SetVolumeTileIntDataFuncPtr SetVolumeTileIntDataImpl;
    static SetVolumeVoxelFloatDataFuncPtr SetVolumeVoxelFloatDataImpl;
    static SetVolumeVoxelIntDataFuncPtr SetVolumeVoxelIntDataImpl;
    static SetWorkItemFloatAttributeFuncPtr SetWorkItemFloatAttributeImpl;
    static SetWorkItemIntAttributeFuncPtr SetWorkItemIntAttributeImpl;
    static SetWorkItemStringAttributeFuncPtr SetWorkItemStringAttributeImpl;
    static SetWorkitemFloatDataFuncPtr SetWorkitemFloatDataImpl;
    static SetWorkitemIntDataFuncPtr SetWorkitemIntDataImpl;
    static SetWorkitemStringDataFuncPtr SetWorkitemStringDataImpl;
    static ShutdownFuncPtr ShutdownImpl;
    static StartThriftNamedPipeServerFuncPtr StartThriftNamedPipeServerImpl;
    static StartThriftSocketServerFuncPtr StartThriftSocketServerImpl;

public:

    static HAPI_Result AddAttributeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info);
    static HAPI_Result AddGroupEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name);
    static HAPI_Result BindCustomImplementationEmptyStub(HAPI_SessionType session_type, const char * dll_path);
    static HAPI_Result CancelPDGCookEmptyStub(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id);
    static HAPI_Result CheckForSpecificErrorsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ErrorCodeBits errors_to_look_for, HAPI_ErrorCodeBits * errors_found);
    static HAPI_Result CleanupEmptyStub(const HAPI_Session * session);
    static HAPI_Result ClearConnectionErrorEmptyStub();
    static HAPI_Result CloseSessionEmptyStub(const HAPI_Session * session);
    static HAPI_Result CommitGeoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id);
    static HAPI_Result CommitWorkItemsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id);
    static HAPI_Result CommitWorkitemsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id);
    static HAPI_Result ComposeChildNodeListEmptyStub(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_NodeTypeBits node_type_filter, HAPI_NodeFlagsBits node_flags_filter, HAPI_Bool recursive, int * count);
    static HAPI_Result ComposeNodeCookResultEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_StatusVerbosity verbosity, int * buffer_length);
    static HAPI_Result ComposeObjectListEmptyStub(const HAPI_Session * session, HAPI_NodeId parent_node_id, const char * categories, int * object_count);
    static HAPI_Result ConnectNodeInputEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int input_index, HAPI_NodeId node_id_to_connect, int output_index);
    static HAPI_Result ConvertMatrixToEulerEmptyStub(const HAPI_Session * session, const float * matrix, HAPI_RSTOrder rst_order, HAPI_XYZOrder rot_order, HAPI_TransformEuler * transform_out);
    static HAPI_Result ConvertMatrixToQuatEmptyStub(const HAPI_Session * session, const float * matrix, HAPI_RSTOrder rst_order, HAPI_Transform * transform_out);
    static HAPI_Result ConvertTransformEmptyStub(const HAPI_Session * session, const HAPI_TransformEuler * transform_in, HAPI_RSTOrder rst_order, HAPI_XYZOrder rot_order, HAPI_TransformEuler * transform_out);
    static HAPI_Result ConvertTransformEulerToMatrixEmptyStub(const HAPI_Session * session, const HAPI_TransformEuler * transform, float * matrix);
    static HAPI_Result ConvertTransformQuatToMatrixEmptyStub(const HAPI_Session * session, const HAPI_Transform * transform, float * matrix);
    static HAPI_Result CookNodeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const HAPI_CookOptions * cook_options);
    static HAPI_Result CookPDGEmptyStub(const HAPI_Session * session, HAPI_NodeId cook_node_id, int generate_only, int blocking);
    static HAPI_Result CookPDGAllOutputsEmptyStub(const HAPI_Session* session, HAPI_NodeId cook_node_id, int generate_only, int blocking);
    static HAPI_Result CreateCustomSessionEmptyStub(HAPI_SessionType session_type, void * session_info, HAPI_Session * session);
    static HAPI_Result CreateHeightFieldInputEmptyStub(const HAPI_Session * session, HAPI_NodeId parent_node_id, const char * name, int xsize, int ysize, float voxelsize, HAPI_HeightFieldSampling sampling, HAPI_NodeId * heightfield_node_id, HAPI_NodeId * height_node_id, HAPI_NodeId * mask_node_id, HAPI_NodeId * merge_node_id);
    static HAPI_Result CreateHeightfieldInputVolumeNodeEmptyStub(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_NodeId * new_node_id, const char * name, int xsize, int ysize, float voxelsize);
    static HAPI_Result CreateInProcessSessionEmptyStub(HAPI_Session * session);
    static HAPI_Result CreateInputCurveNodeEmptyStub(const HAPI_Session * session, HAPI_NodeId * node_id, const char * name);
    static HAPI_Result CreateInputNodeEmptyStub(const HAPI_Session * session, HAPI_NodeId * node_id, const char * name);
    static HAPI_Result CreateNodeEmptyStub(const HAPI_Session * session, HAPI_NodeId parent_node_id, const char * operator_name, const char * node_label, HAPI_Bool cook_on_creation, HAPI_NodeId * new_node_id);
    static HAPI_Result CreateThriftNamedPipeSessionEmptyStub(HAPI_Session * session, const char * pipe_name);
    static HAPI_Result CreateThriftSocketSessionEmptyStub(HAPI_Session * session, const char * host_name, int port);
    static HAPI_Result CreateWorkItemEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId * work_item_id, const char * name, int index);
    static HAPI_Result CreateWorkitemEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId * workitem_id, const char * name, int index);
    static HAPI_Result DeleteAttributeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info);
    static HAPI_Result DeleteGroupEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name);
    static HAPI_Result DeleteNodeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id);
    static HAPI_Result DirtyPDGNodeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Bool clean_results);
    static HAPI_Result DisconnectNodeInputEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int input_index);
    static HAPI_Result DisconnectNodeOutputsAtEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int output_index);
    static HAPI_Result ExtractImageToFileEmptyStub(const HAPI_Session * session, HAPI_NodeId material_node_id, const char * image_file_format_name, const char * image_planes, const char * destination_folder_path, const char * destination_file_name, int * destination_file_path);
    static HAPI_Result ExtractImageToMemoryEmptyStub(const HAPI_Session * session, HAPI_NodeId material_node_id, const char * image_file_format_name, const char * image_planes, int * buffer_size);
    static HAPI_Result GetActiveCacheCountEmptyStub(const HAPI_Session * session, int * active_cache_count);
    static HAPI_Result GetActiveCacheNamesEmptyStub(const HAPI_Session * session, HAPI_StringHandle * cache_names_array, int active_cache_count);
    static HAPI_Result GetAssetDefinitionParmCountsEmptyStub(const HAPI_Session * session, HAPI_AssetLibraryId library_id, const char * asset_name, int * parm_count, int * int_value_count, int * float_value_count, int * string_value_count, int * choice_value_count);
    static HAPI_Result GetAssetDefinitionParmInfosEmptyStub(const HAPI_Session * session, HAPI_AssetLibraryId library_id, const char * asset_name, HAPI_ParmInfo * parm_infos_array, int start, int length);
    static HAPI_Result GetAssetDefinitionParmValuesEmptyStub(const HAPI_Session * session, HAPI_AssetLibraryId library_id, const char * asset_name, int * int_values_array, int int_start, int int_length, float * float_values_array, int float_start, int float_length, HAPI_Bool string_evaluate, HAPI_StringHandle * string_values_array, int string_start, int string_length, HAPI_ParmChoiceInfo * choice_values_array, int choice_start, int choice_length);
    static HAPI_Result GetAssetInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_AssetInfo * asset_info);
    static HAPI_Result GetAttributeFloat64ArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, double * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result GetAttributeFloat64DataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, double * data_array, int start, int length);
    static HAPI_Result GetAttributeFloatArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, float * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result GetAttributeFloatDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, float * data_array, int start, int length);
    static HAPI_Result GetAttributeInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeOwner owner, HAPI_AttributeInfo * attr_info);
    static HAPI_Result GetAttributeInt16ArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_Int16 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result GetAttributeInt16DataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_Int16 * data_array, int start, int length);
    static HAPI_Result GetAttributeInt64ArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_Int64 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result GetAttributeInt64DataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_Int64 * data_array, int start, int length);
    static HAPI_Result GetAttributeInt8ArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_Int8 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result GetAttributeInt8DataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_Int8 * data_array, int start, int length);
    static HAPI_Result GetAttributeIntArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result GetAttributeIntDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, int * data_array, int start, int length);
    static HAPI_Result GetAttributeNamesEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_AttributeOwner owner, HAPI_StringHandle * attribute_names_array, int count);
    static HAPI_Result GetAttributeStringArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_StringHandle * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result GetAttributeStringDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_StringHandle * data_array, int start, int length);
    static HAPI_Result GetAttributeUInt8ArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, HAPI_UInt8 * data_fixed_array, int data_fixed_length, int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result GetAttributeUInt8DataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, HAPI_AttributeInfo * attr_info, int stride, HAPI_UInt8 * data_array, int start, int length);
    static HAPI_Result GetAvailableAssetCountEmptyStub(const HAPI_Session * session, HAPI_AssetLibraryId library_id, int * asset_count);
    static HAPI_Result GetAvailableAssetsEmptyStub(const HAPI_Session * session, HAPI_AssetLibraryId library_id, HAPI_StringHandle * asset_names_array, int asset_count);
    static HAPI_Result GetBoxInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId geo_node_id, HAPI_PartId part_id, HAPI_BoxInfo * box_info);
    static HAPI_Result GetCachePropertyEmptyStub(const HAPI_Session * session, const char * cache_name, HAPI_CacheProperty cache_property, int * property_value);
    static HAPI_Result GetComposedChildNodeListEmptyStub(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_NodeId * child_node_ids_array, int count);
    static HAPI_Result GetComposedNodeCookResultEmptyStub(const HAPI_Session * session, char * string_value, int length);
    static HAPI_Result GetComposedObjectListEmptyStub(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_ObjectInfo * object_infos_array, int start, int length);
    static HAPI_Result GetComposedObjectTransformsEmptyStub(const HAPI_Session * session, HAPI_NodeId parent_node_id, HAPI_RSTOrder rst_order, HAPI_Transform * transform_array, int start, int length);
    static HAPI_Result GetCompositorOptionsEmptyStub(const HAPI_Session * session, HAPI_CompositorOptions * compositor_options);
    static HAPI_Result GetConnectionErrorEmptyStub(char * string_value, int length, HAPI_Bool clear);
    static HAPI_Result GetConnectionErrorLengthEmptyStub(int * buffer_length);
    static HAPI_Result GetCookingCurrentCountEmptyStub(const HAPI_Session * session, int * count);
    static HAPI_Result GetCookingTotalCountEmptyStub(const HAPI_Session * session, int * count);
    static HAPI_Result GetCurveCountsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * counts_array, int start, int length);
    static HAPI_Result GetCurveInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_CurveInfo * info);
    static HAPI_Result GetCurveKnotsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float * knots_array, int start, int length);
    static HAPI_Result GetCurveOrdersEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * orders_array, int start, int length);
    static HAPI_Result GetDisplayGeoInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId object_node_id, HAPI_GeoInfo * geo_info);
    static HAPI_Result GetEdgeCountOfEdgeGroupEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * group_name, int * edge_count);
    static HAPI_Result GetEnvIntEmptyStub(HAPI_EnvIntType int_type, int * value);
    static HAPI_Result GetFaceCountsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * face_counts_array, int start, int length);
    static HAPI_Result GetFirstVolumeTileEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeTileInfo * tile);
    static HAPI_Result GetGeometryInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_GeoInfo * geo_info);
    static HAPI_Result GetGeoSizeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * format, int * size);
    static HAPI_Result GetGroupCountOnPackedInstancePartEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * pointGroupCount, int * primitiveGroupCount);
    static HAPI_Result GetGroupMembershipEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, HAPI_Bool * membership_array_all_equal, int * membership_array, int start, int length);
    static HAPI_Result GetGroupMembershipOnPackedInstancePartEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, HAPI_Bool * membership_array_all_equal, int * membership_array, int start, int length);
    static HAPI_Result GetGroupNamesEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_GroupType group_type, HAPI_StringHandle * group_names_array, int group_count);
    static HAPI_Result GetGroupNamesOnPackedInstancePartEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, HAPI_StringHandle * group_names_array, int group_count);
    static HAPI_Result GetHIPFileNodeCountEmptyStub(const HAPI_Session * session, HAPI_HIPFileId id, int * count);
    static HAPI_Result GetHIPFileNodeIdsEmptyStub(const HAPI_Session * session, HAPI_HIPFileId id, HAPI_NodeId * node_ids, int length);
    static HAPI_Result GetHandleBindingInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int handle_index, HAPI_HandleBindingInfo * handle_binding_infos_array, int start, int length);
    static HAPI_Result GetHandleInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_HandleInfo * handle_infos_array, int start, int length);
    static HAPI_Result GetHeightFieldDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float * values_array, int start, int length);
    static HAPI_Result GetImageFilePathEmptyStub(const HAPI_Session * session, HAPI_NodeId material_node_id, const char * image_file_format_name, const char * image_planes, const char * destination_folder_path, const char * destination_file_name, HAPI_ParmId texture_parm_id, int * destination_file_path);
    static HAPI_Result GetImageInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_ImageInfo * image_info);
    static HAPI_Result GetImageMemoryBufferEmptyStub(const HAPI_Session * session, HAPI_NodeId material_node_id, char * buffer, int length);
    static HAPI_Result GetImagePlaneCountEmptyStub(const HAPI_Session * session, HAPI_NodeId material_node_id, int * image_plane_count);
    static HAPI_Result GetImagePlanesEmptyStub(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_StringHandle * image_planes_array, int image_plane_count);
    static HAPI_Result GetInputCurveInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_InputCurveInfo * info);
    static HAPI_Result GetInstanceTransformsOnPartEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_RSTOrder rst_order, HAPI_Transform * transforms_array, int start, int length);
    static HAPI_Result GetInstancedObjectIdsEmptyStub(const HAPI_Session * session, HAPI_NodeId object_node_id, HAPI_NodeId * instanced_node_id_array, int start, int length);
    static HAPI_Result GetInstancedPartIdsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_PartId * instanced_parts_array, int start, int length);
    static HAPI_Result GetInstancerPartTransformsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_RSTOrder rst_order, HAPI_Transform * transforms_array, int start, int length);
    static HAPI_Result GetManagerNodeIdEmptyStub(const HAPI_Session * session, HAPI_NodeType node_type, HAPI_NodeId * node_id);
    static HAPI_Result GetMaterialInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_MaterialInfo * material_info);
    static HAPI_Result GetMaterialNodeIdsOnFacesEmptyStub(const HAPI_Session * session, HAPI_NodeId geometry_node_id, HAPI_PartId part_id, HAPI_Bool * are_all_the_same, HAPI_NodeId * material_ids_array, int start, int length);
    static HAPI_Result GetNextVolumeTileEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeTileInfo * tile);
    static HAPI_Result GetNodeFromPathEmptyStub(const HAPI_Session * session, const HAPI_NodeId parent_node_id, const char * path, HAPI_NodeId * node_id);
    static HAPI_Result GetNodeInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeInfo * node_info);
    static HAPI_Result GetNodeInputNameEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int input_idx, HAPI_StringHandle * name);
    static HAPI_Result GetNodeOutputNameEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int output_idx, HAPI_StringHandle * name);
    static HAPI_Result GetNodePathEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeId relative_to_node_id, HAPI_StringHandle * path);
    static HAPI_Result GetNumWorkItemsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int * num);
    static HAPI_Result GetNumWorkitemsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int * num);
    static HAPI_Result GetObjectInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ObjectInfo * object_info);
    static HAPI_Result GetObjectTransformEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeId relative_to_node_id, HAPI_RSTOrder rst_order, HAPI_Transform * transform);
    static HAPI_Result GetOutputGeoCountEmptyStub(const HAPI_Session* session, HAPI_NodeId node_id, int* count);
    static HAPI_Result GetOutputGeoInfosEmptyStub(const HAPI_Session* session, HAPI_NodeId node_id, HAPI_GeoInfo* geo_infos_array, int count);
    static HAPI_Result GetOutputNodeIdEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int output, HAPI_NodeId * output_node_id);
    static HAPI_Result GetPDGEventsEmptyStub(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_EventInfo * event_array, int length, int * event_count, int * remaining_events);
    static HAPI_Result GetPDGGraphContextIdEmptyStub(const HAPI_Session * session, HAPI_NodeId top_node_id, HAPI_PDG_GraphContextId * context_id);
    static HAPI_Result GetPDGGraphContextsEmptyStub(const HAPI_Session * session, HAPI_StringHandle * context_names_array, HAPI_PDG_GraphContextId * context_id_array, int start, int length);
    static HAPI_Result GetPDGGraphContextsCountEmptyStub(const HAPI_Session* session, int* num_contexts);
    static HAPI_Result GetPDGStateEmptyStub(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, int * pdg_state);
    static HAPI_Result GetParametersEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmInfo * parm_infos_array, int start, int length);
    static HAPI_Result GetParmChoiceListsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmChoiceInfo * parm_choices_array, int start, int length);
    static HAPI_Result GetParmExpressionEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_StringHandle * value);
    static HAPI_Result GetParmFileEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, const char * destination_directory, const char * destination_file_name);
    static HAPI_Result GetParmFloatValueEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, float * value);
    static HAPI_Result GetParmFloatValuesEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, float * values_array, int start, int length);
    static HAPI_Result GetParmIdFromNameEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_ParmId * parm_id);
    static HAPI_Result GetParmInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, HAPI_ParmInfo * parm_info);
    static HAPI_Result GetParmInfoFromNameEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_ParmInfo * parm_info);
    static HAPI_Result GetParmIntValueEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, int * value);
    static HAPI_Result GetParmIntValuesEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int * values_array, int start, int length);
    static HAPI_Result GetParmNodeValueEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_NodeId * value);
    static HAPI_Result GetParmStringValueEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_Bool evaluate, HAPI_StringHandle * value);
    static HAPI_Result GetParmStringValuesEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_Bool evaluate, HAPI_StringHandle * values_array, int start, int length);
    static HAPI_Result GetParmTagNameEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int tag_index, HAPI_StringHandle * tag_name);
    static HAPI_Result GetParmTagValueEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, const char * tag_name, HAPI_StringHandle * tag_value);
    static HAPI_Result GetParmWithTagEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * tag_name, HAPI_ParmId * parm_id);
    static HAPI_Result GetPartInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_PartInfo * part_info);
    static HAPI_Result GetPresetEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, char * buffer, int buffer_length);
    static HAPI_Result GetPresetBufLengthEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PresetType preset_type, const char * preset_name, int * buffer_length);
    static HAPI_Result GetServerEnvIntEmptyStub(const HAPI_Session * session, const char * variable_name, int * value);
    static HAPI_Result GetServerEnvStringEmptyStub(const HAPI_Session * session, const char * variable_name, HAPI_StringHandle * value);
    static HAPI_Result GetServerEnvVarCountEmptyStub(const HAPI_Session * session, int * env_count);
    static HAPI_Result GetServerEnvVarListEmptyStub(const HAPI_Session * session, HAPI_StringHandle * values_array, int start, int length);
    static HAPI_Result GetSessionEnvIntEmptyStub(const HAPI_Session * session, HAPI_SessionEnvIntType int_type, int * value);
    static HAPI_Result GetSessionSyncInfoEmptyStub(const HAPI_Session * session, HAPI_SessionSyncInfo * session_sync_info);
    static HAPI_Result GetSphereInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId geo_node_id, HAPI_PartId part_id, HAPI_SphereInfo * sphere_info);
    static HAPI_Result GetStatusEmptyStub(const HAPI_Session * session, HAPI_StatusType status_type, int * status);
    static HAPI_Result GetStatusStringEmptyStub(const HAPI_Session * session, HAPI_StatusType status_type, char * string_value, int length);
    static HAPI_Result GetStatusStringBufLengthEmptyStub(const HAPI_Session * session, HAPI_StatusType status_type, HAPI_StatusVerbosity verbosity, int * buffer_length);
    static HAPI_Result GetStringEmptyStub(const HAPI_Session * session, HAPI_StringHandle string_handle, char * string_value, int length);
    static HAPI_Result GetStringBatchEmptyStub(const HAPI_Session * session, char * char_buffer, int char_array_length);
    static HAPI_Result GetStringBatchSizeEmptyStub(const HAPI_Session * session, const int * string_handle_array, int string_handle_count, int * string_buffer_size);
    static HAPI_Result GetStringBufLengthEmptyStub(const HAPI_Session * session, HAPI_StringHandle string_handle, int * buffer_length);
    static HAPI_Result GetSupportedImageFileFormatCountEmptyStub(const HAPI_Session * session, int * file_format_count);
    static HAPI_Result GetSupportedImageFileFormatsEmptyStub(const HAPI_Session * session, HAPI_ImageFileFormat * formats_array, int file_format_count);
    static HAPI_Result GetTimeEmptyStub(const HAPI_Session * session, float * time);
    static HAPI_Result GetTimelineOptionsEmptyStub(const HAPI_Session * session, HAPI_TimelineOptions * timeline_options);
    static HAPI_Result GetTotalCookCountEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_NodeTypeBits node_type_filter, HAPI_NodeFlagsBits node_flags_filter, HAPI_Bool recursive, int * count);
    static HAPI_Result GetUseHoudiniTimeEmptyStub(const HAPI_Session * session, HAPI_Bool * enabled);
    static HAPI_Result GetVertexListEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int * vertex_list_array, int start, int length);
    static HAPI_Result GetViewportEmptyStub(const HAPI_Session * session, HAPI_Viewport * viewport);
    static HAPI_Result GetVolumeBoundsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float * x_min, float * y_min, float * z_min, float * x_max, float * y_max, float * z_max, float * x_center, float * y_center, float * z_center);
    static HAPI_Result GetVolumeInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeInfo * volume_info);
    static HAPI_Result GetVolumeTileFloatDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, float fill_value, const HAPI_VolumeTileInfo * tile, float * values_array, int length);
    static HAPI_Result GetVolumeTileIntDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int fill_value, const HAPI_VolumeTileInfo * tile, int * values_array, int length);
    static HAPI_Result GetVolumeVisualInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeVisualInfo * visual_info);
    static HAPI_Result GetVolumeVoxelFloatDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, float * values_array, int value_count);
    static HAPI_Result GetVolumeVoxelIntDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, int * values_array, int value_count);
    static HAPI_Result GetWorkItemAttributeSizeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, int * length);
    static HAPI_Result GetWorkItemFloatAttributeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, float * data_array, int length);
    static HAPI_Result GetWorkItemInfoEmptyStub(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_WorkItemId work_item_id, HAPI_PDG_WorkItemInfo * work_item_info);
    static HAPI_Result GetWorkItemIntAttributeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, int * data_array, int length);
    static HAPI_Result GetWorkItemOutputFilesEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, HAPI_PDG_WorkItemOutputFile * resultinfo_array, int resultinfo_count);
    static HAPI_Result GetWorkItemStringAttributeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, HAPI_StringHandle * data_array, int length);
    static HAPI_Result GetWorkItemsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int * work_item_ids_array, int length);
    static HAPI_Result GetWorkitemDataLengthEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, int * length);
    static HAPI_Result GetWorkitemFloatDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, float * data_array, int length);
    static HAPI_Result GetWorkitemInfoEmptyStub(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_WorkItemId workitem_id, HAPI_PDG_WorkItemInfo * workitem_info);
    static HAPI_Result GetWorkitemIntDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, int * data_array, int length);
    static HAPI_Result GetWorkitemResultInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, HAPI_PDG_WorkItemOutputFile * resultinfo_array, int resultinfo_count);
    static HAPI_Result GetWorkitemStringDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, HAPI_StringHandle * data_array, int length);
    static HAPI_Result GetWorkitemsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int * workitem_ids_array, int length);
    static HAPI_Result InitializeEmptyStub(const HAPI_Session * session, const HAPI_CookOptions * cook_options, HAPI_Bool use_cooking_thread, int cooking_thread_stack_size, const char * houdini_environment_files, const char * otl_search_path, const char * dso_search_path, const char * image_dso_search_path, const char * audio_dso_search_path);
    static HAPI_Result InsertMultiparmInstanceEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int instance_position);
    static HAPI_Result InterruptEmptyStub(const HAPI_Session * session);
    static HAPI_Result IsInitializedEmptyStub(const HAPI_Session * session);
    static HAPI_Result IsNodeValidEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int unique_node_id, HAPI_Bool * answer);
    static HAPI_Result IsSessionValidEmptyStub(const HAPI_Session * session);
    static HAPI_Result LoadAssetLibraryFromFileEmptyStub(const HAPI_Session * session, const char * file_path, HAPI_Bool allow_overwrite, HAPI_AssetLibraryId * library_id);
    static HAPI_Result LoadAssetLibraryFromMemoryEmptyStub(const HAPI_Session * session, const char * library_buffer, int library_buffer_length, HAPI_Bool allow_overwrite, HAPI_AssetLibraryId * library_id);
    static HAPI_Result LoadGeoFromFileEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * file_name);
    static HAPI_Result LoadGeoFromMemoryEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * format, const char * buffer, int length);
    static HAPI_Result LoadHIPFileEmptyStub(const HAPI_Session * session, const char * file_name, HAPI_Bool cook_on_load);
    static HAPI_Result LoadNodeFromFileEmptyStub(const HAPI_Session * session, const char * file_name, HAPI_NodeId parent_node_id, const char * node_label, HAPI_Bool cook_on_load, HAPI_NodeId * new_node_id);
    static HAPI_Result MergeHIPFileEmptyStub(const HAPI_Session * session, const char * file_name, HAPI_Bool cook_on_load, HAPI_HIPFileId * file_id);
    static HAPI_Result ParmHasExpressionEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, HAPI_Bool * has_expression);
    static HAPI_Result ParmHasTagEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, const char * tag_name, HAPI_Bool * has_tag);
    static HAPI_Result PausePDGCookEmptyStub(const HAPI_Session * session, HAPI_PDG_GraphContextId graph_context_id);
    static HAPI_Result PythonThreadInterpreterLockEmptyStub(const HAPI_Session * session, HAPI_Bool locked);
    static HAPI_Result QueryNodeInputEmptyStub(const HAPI_Session * session, HAPI_NodeId node_to_query, int input_index, HAPI_NodeId * connected_node_id);
    static HAPI_Result QueryNodeOutputConnectedCountEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int output_idx, HAPI_Bool into_subnets, HAPI_Bool through_dots, int * connected_count);
    static HAPI_Result QueryNodeOutputConnectedNodesEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int output_idx, HAPI_Bool into_subnets, HAPI_Bool through_dots, HAPI_NodeId * connected_node_ids_array, int start, int length);
    static HAPI_Result RemoveCustomStringEmptyStub(const HAPI_Session * session, const HAPI_StringHandle string_handle);
    static HAPI_Result RemoveMultiparmInstanceEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int instance_position);
    static HAPI_Result RemoveParmExpressionEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int index);
    static HAPI_Result RenameNodeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * new_name);
    static HAPI_Result RenderCOP2ToImageEmptyStub(const HAPI_Session * session, HAPI_NodeId cop_node_id);
    static HAPI_Result RenderTextureToImageEmptyStub(const HAPI_Session * session, HAPI_NodeId material_node_id, HAPI_ParmId parm_id);
    static HAPI_Result ResetSimulationEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id);
    static HAPI_Result RevertGeoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id);
    static HAPI_Result RevertParmToDefaultEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index);
    static HAPI_Result RevertParmToDefaultsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name);
    static HAPI_Result SaveGeoToFileEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * file_name);
    static HAPI_Result SaveGeoToMemoryEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, char * buffer, int length);
    static HAPI_Result SaveHIPFileEmptyStub(const HAPI_Session * session, const char * file_path, HAPI_Bool lock_nodes);
    static HAPI_Result SaveNodeToFileEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * file_name);
    static HAPI_Result SetAnimCurveEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int parm_index, const HAPI_Keyframe * curve_keyframes_array, int keyframe_count);
    static HAPI_Result SetAttributeFloat64ArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const double * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result SetAttributeFloat64DataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const double * data_array, int start, int length);
    static HAPI_Result SetAttributeFloatArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const float * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result SetAttributeFloatDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const float * data_array, int start, int length);
    static HAPI_Result SetAttributeInt16ArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int16 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result SetAttributeInt16DataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int16 * data_array, int start, int length);
    static HAPI_Result SetAttributeInt64ArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int64 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result SetAttributeInt64DataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int64 * data_array, int start, int length);
    static HAPI_Result SetAttributeInt8ArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int8 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result SetAttributeInt8DataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_Int8 * data_array, int start, int length);
    static HAPI_Result SetAttributeIntArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const int * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result SetAttributeIntDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const int * data_array, int start, int length);
    static HAPI_Result SetAttributeStringArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const char ** data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result SetAttributeStringDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const char ** data_array, int start, int length);
    static HAPI_Result SetAttributeUInt8ArrayDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_UInt8 * data_fixed_array, int data_fixed_length, const int * sizes_fixed_array, int start, int sizes_fixed_length);
    static HAPI_Result SetAttributeUInt8DataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const HAPI_AttributeInfo * attr_info, const HAPI_UInt8 * data_array, int start, int length);
    static HAPI_Result SetCachePropertyEmptyStub(const HAPI_Session * session, const char * cache_name, HAPI_CacheProperty cache_property, int property_value);
    static HAPI_Result SetCompositorOptionsEmptyStub(const HAPI_Session * session, const HAPI_CompositorOptions * compositor_options);
    static HAPI_Result SetCurveCountsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * counts_array, int start, int length);
    static HAPI_Result SetCurveInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_CurveInfo * info);
    static HAPI_Result SetCurveKnotsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const float * knots_array, int start, int length);
    static HAPI_Result SetCurveOrdersEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * orders_array, int start, int length);
    static HAPI_Result SetCustomStringEmptyStub(const HAPI_Session * session, const char * string_value, HAPI_StringHandle * handle_value);
    static HAPI_Result SetFaceCountsEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * face_counts_array, int start, int length);
    static HAPI_Result SetGroupMembershipEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char * group_name, const int * membership_array, int start, int length);
    static HAPI_Result SetHeightFieldDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const char * name, const float * values_array, int start, int length);
    static HAPI_Result SetImageInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId material_node_id, const HAPI_ImageInfo * image_info);
    static HAPI_Result SetInputCurveInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_InputCurveInfo * info);
    static HAPI_Result SetInputCurvePositionsEmptyStub(const HAPI_Session* session, HAPI_NodeId node_id, HAPI_PartId part_id, const float* positions_array, int start, int length);
    static HAPI_Result SetInputCurvePositionsRotationsScalesEmptyStub(const HAPI_Session* session, HAPI_NodeId node_id, HAPI_PartId part_id, const float* positions_array, int positions_start, int positions_length, const float* rotations_array, int rotations_start, int rotations_length, const float * scales_array, int scales_start, int scales_length);
    static HAPI_Result SetNodeDisplayEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, int onOff);
    static HAPI_Result SetObjectTransformEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const HAPI_TransformEuler * trans);
    static HAPI_Result SetParmExpressionEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * value, HAPI_ParmId parm_id, int index);
    static HAPI_Result SetParmFloatValueEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, float value);
    static HAPI_Result SetParmFloatValuesEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const float * values_array, int start, int length);
    static HAPI_Result SetParmIntValueEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, int index, int value);
    static HAPI_Result SetParmIntValuesEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const int * values_array, int start, int length);
    static HAPI_Result SetParmNodeValueEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * parm_name, HAPI_NodeId value);
    static HAPI_Result SetParmStringValueEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, const char * value, HAPI_ParmId parm_id, int index);
    static HAPI_Result SetPartInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_PartInfo * part_info);
    static HAPI_Result SetPresetEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PresetType preset_type, const char * preset_name, const char * buffer, int buffer_length);
    static HAPI_Result SetServerEnvIntEmptyStub(const HAPI_Session * session, const char * variable_name, int value);
    static HAPI_Result SetServerEnvStringEmptyStub(const HAPI_Session * session, const char * variable_name, const char * value);
    static HAPI_Result SetSessionSyncEmptyStub(const HAPI_Session * session, HAPI_Bool enable);
    static HAPI_Result SetSessionSyncInfoEmptyStub(const HAPI_Session * session, const HAPI_SessionSyncInfo * session_sync_info);
    static HAPI_Result SetTimeEmptyStub(const HAPI_Session * session, float time);
    static HAPI_Result SetTimelineOptionsEmptyStub(const HAPI_Session * session, const HAPI_TimelineOptions * timeline_options);
    static HAPI_Result SetTransformAnimCurveEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_TransformComponent trans_comp, const HAPI_Keyframe * curve_keyframes_array, int keyframe_count);
    static HAPI_Result SetUseHoudiniTimeEmptyStub(const HAPI_Session * session, HAPI_Bool enabled);
    static HAPI_Result SetVertexListEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const int * vertex_list_array, int start, int length);
    static HAPI_Result SetViewportEmptyStub(const HAPI_Session * session, const HAPI_Viewport * viewport);
    static HAPI_Result SetVolumeInfoEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeInfo * volume_info);
    static HAPI_Result SetVolumeTileFloatDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeTileInfo * tile, const float * values_array, int length);
    static HAPI_Result SetVolumeTileIntDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeTileInfo * tile, const int * values_array, int length);
    static HAPI_Result SetVolumeVoxelFloatDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, const float * values_array, int value_count);
    static HAPI_Result SetVolumeVoxelIntDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, const int * values_array, int value_count);
    static HAPI_Result SetWorkItemFloatAttributeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, const float * values_array, int length);
    static HAPI_Result SetWorkItemIntAttributeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, const int * values_array, int length);
    static HAPI_Result SetWorkItemStringAttributeEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char * attribute_name, int data_index, const char * value);
    static HAPI_Result SetWorkitemFloatDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, const float * values_array, int length);
    static HAPI_Result SetWorkitemIntDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, const int * values_array, int length);
    static HAPI_Result SetWorkitemStringDataEmptyStub(const HAPI_Session * session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId workitem_id, const char * data_name, int data_index, const char * value);
    static HAPI_Result ShutdownEmptyStub(const HAPI_Session * session);
    static HAPI_Result StartThriftNamedPipeServerEmptyStub(const HAPI_ThriftServerOptions * options, const char * pipe_name, HAPI_ProcessId * process_id, const char * log_file);
    static HAPI_Result StartThriftSocketServerEmptyStub(const HAPI_ThriftServerOptions * options, int port, HAPI_ProcessId * process_id, const char * log_file);
};
